{"version":3,"sources":["assets/images/blogging.png","redux/actions/index.js","redux/actions/actionCreator.js","components/Navbars/HorizontalNavbar.js","components/Footer/FooterComponent.js","components/Layout/Layout.js","components/Jumbotron/Jumbotron.js","api/api.js","assets/images/default-post-image.jpg","components/PostsGrid/PostsGrid.js","pages/Home/Home.js","pages/Login/LoginForm.js","pages/Login/Login.js","pages/Signup/SignupForm.js","pages/Signup/Signup.js","pages/Posts/NewPost.js","pages/Posts/UserPosts.js","pages/Posts/EditPost.js","assets/images/default-user.png","pages/Users/UserProfile.js","pages/Comments/CommentForm.js","pages/Comments/CommentsDesktop.js","pages/Comments/CommentsMobile.js","pages/Comments/Comments.js","pages/Posts/Post.js","LoggedInRoute.js","NotLoggedInRoute.js","pages/NotFound/NotFound.js","App.js","redux/reducers/userAuthReducer.js","redux/store/sessionStorage.js","redux/reducers/rootReducer.js","redux/sagas/userAuthSaga.js","redux/sagas/rootSaga.js","redux/store/store.js","index.js"],"names":["userAuth","userAuthActions","payload","type","err","SubMenu","Menu","HorizontalNavbar","userState","useSelector","st","user","dispatch","useDispatch","selectedKeys","mode","theme","Item","className","href","src","blogLogo","shape","isLoggedIn","icon","imagePath","title","userName","SettingOutlined","GroupOutlined","LoginOutlined","onClick","FormOutlined","UserAddOutlined","FooterComponent","Header","AntdLayout","Footer","Sider","Content","Layout","children","Jumbotron","axios","Axios","create","baseURL","authAPI","data","post","usersAPI","id","get","put","postsAPI","delete","commentsAPI","Meta","Card","PostsGrid","reloadPosts","router","useHistory","useState","deleteModal","setDeleteModal","deletePostID","setDeletePostID","reload","setReload","confirmDelete","a","message","success","console","log","response","error","map","item","xs","sm","md","lg","hoverable","cover","push","postID","_id","alt","defaultPostImage","actions","createdBy","EditTwoTone","DeleteTwoTone","twoToneColor","description","content","substring","visible","onOk","onCancel","centered","Home","postsData","setPostsData","window","innerWidth","width","setWidth","errorMsg","setErrorMsg","useEffect","handleResize","addEventListener","removeEventListener","res","RightCircleOutlined","size","autoplay","loop","orientation","Boolean","length","param","LoginForm","initialValues","submissionErrors","setSubmissionErrors","onSubmit","event","validate","values","errors","email","trim","password","render","handleSubmit","submitting","label","labelCol","span","wrapperCol","name","input","meta","touched","color","Password","isEmpty","Object","entries","key","value","disabled","htmlType","Login","SignupForm","confirmPassword","Signup","NewPost","rows","goBack","UserPosts","location","useLocation","setUserName","userID","setUserID","getPostsData","state","hasOwnProperty","keys","reloadTrigger","EditPost","setInitialValues","setPostID","UserProfile","editing","setEditing","editingPassword","setEditingPassword","defaultUser","oldPassword","form","readOnly","summary","EditFilled","LockFilled","SaveFilled","CaretLeftOutlined","reset","CommentForm","postId","setReloadingFlag","reloading","setReloading","comment","placeholder","showIcon","closable","CommentsDesktop","index","selectedEditCommentID","setDeleteSelectedCommentID","setEditSelectedCommentID","moment","createdAt","fromNow","CommentsMobile","Comments","setDeleteReloadingFlag","setEditReloadingFlag","selectedDeleteCommentID","deleteReloading","setDeleteReloading","editReloading","setEditReloading","Post","postData","setPostData","reloadDelete","setReloadDelete","reloadEdit","setReloadEdit","reloadPost","setReloadPost","userImageUrl","createdByName","format","DeleteFilled","danger","comments","LoggedInRoute","Component","component","rest","props","to","pathname","from","NotLoggedInRoute","NotFound","style","height","App","initialState","exact","path","loadState","serializedState","sessionStorage","getItem","token","JSON","parse","saveState","clear","stringify","setItem","emptyState","decodedToken","jwt","decode","rootReducer","combineReducers","action","newState","updatedState","createLogin","createLoginStart","takeEvery","rootSaga","all","call","sagaMiddleware","createSagaMiddleware","onError","errInfo","onSagaError","middleWares","createLogger","store","createStore","applyMiddleware","run","storeConfig","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.84e0cfef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blogging.ffbd0b74.png\";","export const userAuth = {\r\n  LOGIN: \"LOGIN\",\r\n  UPDATE_USER: \"UPDATE_USER\",\r\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\r\n  LOGIN_FAILED: \"LOGIN_FAILED\",\r\n  LOGOUT: \"LOGOUT\",\r\n};\r\n","import { userAuth } from \"./index\";\r\n\r\nexport const userAuthActions = {\r\n  login: (payload) => ({\r\n    type: userAuth.LOGIN,\r\n    payload: payload,\r\n  }),\r\n  loginSuccess: (payload) => ({\r\n    type: userAuth.LOGIN_SUCCESS,\r\n    payload: payload,\r\n  }),\r\n  updateUser: (payload) => ({\r\n    type: userAuth.UPDATE_USER,\r\n    payload: payload,\r\n  }),\r\n  loginFailed: (err) => ({\r\n    type: userAuth.LOGIN_FAILED,\r\n    payload: err,\r\n  }),\r\n  logout: () => ({\r\n    type: userAuth.LOGOUT,\r\n  }),\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  LoginOutlined,\r\n  UserAddOutlined,\r\n  SettingOutlined,\r\n  GroupOutlined,\r\n  FormOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Menu, Avatar } from \"antd\";\r\nimport blogLogo from \"./../../assets/images/blogging.png\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { userAuthActions } from \"./../../redux/actions/actionCreator\";\r\nconst { SubMenu } = Menu;\r\n\r\nexport default function HorizontalNavbar() {\r\n  const userState = useSelector((st) => st.user);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <Menu selectedKeys={\"logo\"} mode=\"horizontal\" theme=\"dark\">\r\n        <Menu.Item className=\"unhoverable-menu-item\">\r\n          <a href=\"/\">\r\n            <Avatar src={blogLogo} shape=\"square\" /> &nbsp; Blog App\r\n          </a>\r\n        </Menu.Item>\r\n\r\n        {userState.isLoggedIn ? (\r\n          <>\r\n            <SubMenu\r\n              key=\"SubMenu\"\r\n              icon={<Avatar src={userState.user.imagePath} shape=\"circle\" />}\r\n              title={\" \" + userState.user.userName}\r\n              className=\"float-right unhoverable-menu-item\"\r\n            >\r\n              <Menu.Item key=\"userProfile\" icon={<SettingOutlined />}>\r\n                <a href=\"/user/profile\">User Profile</a>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"userPosts\" icon={<GroupOutlined />}>\r\n                <a href=\"/user/posts\">User Posts</a>\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                key=\"logout\"\r\n                icon={<LoginOutlined />}\r\n                onClick={() => dispatch(userAuthActions.logout())}\r\n              >\r\n                Logout\r\n              </Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item\r\n              key=\"newPost\"\r\n              icon={<FormOutlined />}\r\n              className=\"float-right\"\r\n            >\r\n              <a href=\"/posts/new\">New Post</a>\r\n            </Menu.Item>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Menu.Item\r\n              key=\"login\"\r\n              icon={<LoginOutlined />}\r\n              className=\"float-right\"\r\n            >\r\n              <a href=\"/login\">Login</a>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"logout\"\r\n              icon={<UserAddOutlined />}\r\n              className=\"float-right\"\r\n            >\r\n              <a href=\"/signup\">Signup</a>\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Footer.scss\";\r\n\r\nexport default function FooterComponent() {\r\n  return (\r\n    <div className=\"footer-component\">© MERN Blog 2021 by Maryam Aljanabi</div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport HorizontalNavbar from \"./../Navbars/HorizontalNavbar\";\r\nimport { Layout as AntdLayout } from \"antd\";\r\nimport FooterComponent from \"./../Footer/FooterComponent\";\r\n\r\nconst { Header, Footer, Sider, Content } = AntdLayout;\r\n\r\nexport default function Layout({ children }) {\r\n  return (\r\n    <AntdLayout>\r\n      <Header>\r\n        <HorizontalNavbar />\r\n      </Header>\r\n      <div className=\"page-container\">\r\n        <div className=\"page-content\">{children}</div>\r\n        <div className=\"footer\">\r\n          <FooterComponent />\r\n        </div>\r\n      </div>\r\n    </AntdLayout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Jumbotron.scss\";\r\n\r\nexport default function Jumbotron({ children }) {\r\n  return <div className=\"jumbotron\">{children}</div>;\r\n}\r\n","import Axios from \"axios\";\r\nconst axiosConfig = {\r\n  baseURL: `https://mern-blog-01.herokuapp.com/api`,\r\n};\r\n\r\nconst axios = Axios.create(axiosConfig);\r\n\r\n// AUTH\r\nexport const authAPI = {\r\n  login: (data) => axios.post(`/auth/login`, data),\r\n  signup: (data) => axios.post(`/auth/signup`, data),\r\n};\r\n\r\n// USERS\r\nexport const usersAPI = {\r\n  getAll: () => axios.get(`/users`),\r\n  getOne: (id) => axios.get(`/users/${id}`),\r\n  add: (data) => axios.post(`/users`, data),\r\n  update: (data) => axios.put(`/users`, data),\r\n  delete: (id) => axios.delete(`/users/${id}`),\r\n};\r\n\r\n// POSTS\r\nexport const postsAPI = {\r\n  getAll: () => axios.get(`/posts`),\r\n  getPostByUserId: (id) => axios.get(`/posts/user/${id}`),\r\n  getOne: (id) => axios.get(`/posts/${id}`),\r\n  add: (data) => axios.post(`/posts`, data),\r\n  update: (data) => axios.put(`/posts`, data),\r\n  delete: (id) => axios.delete(`/posts/${id}`),\r\n};\r\n\r\n// COMMENTS\r\nexport const commentsAPI = {\r\n  add: (data) => axios.post(`/comments`, data),\r\n  update: (data) => axios.put(`/comments`, data),\r\n  delete: (id) => axios.delete(`/comments/${id}`),\r\n};\r\n","export default __webpack_public_path__ + \"static/media/default-post-image.dd982f18.jpg\";","import React, { useState } from \"react\";\r\nimport { Row, Col, Card, Modal, message } from \"antd\";\r\nimport defaultPostImage from \"./../../assets/images/default-post-image.jpg\";\r\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"./PostsGrid.scss\";\r\nimport { postsAPI } from \"./../../api/api\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function PostsGrid({ data, reloadPosts }) {\r\n  const router = useHistory();\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [deletePostID, setDeletePostID] = useState(null);\r\n  const [reload, setReload] = useState(false);\r\n  const userState = useSelector((st) => st.user);\r\n\r\n  const confirmDelete = async () => {\r\n    try {\r\n      await postsAPI.delete(deletePostID);\r\n      setReload(!reload);\r\n      reloadPosts(!reload);\r\n      setDeleteModal(false);\r\n      message.success(\"Post deleted successfully\");\r\n    } catch (error) {\r\n      console.log(\"Error deleting post...\", error.response ?? error);\r\n      message.error(\"Error deleting post\");\r\n      if (error.response && error.response.data) {\r\n        message.error(error.response.data);\r\n      } else message.error(\"Error deleting post\");\r\n      setDeleteModal(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"posts-container\" type=\"flex\">\r\n        {data.map((item) => (\r\n          <Col xs={24} sm={12} md={8} lg={8} key={item._id}>\r\n            <Card\r\n              hoverable\r\n              cover={\r\n                <div\r\n                  className=\"image-container\"\r\n                  onClick={() =>\r\n                    router.push(\"/posts/view\", { postID: item._id })\r\n                  }\r\n                >\r\n                  <img\r\n                    alt={item.title}\r\n                    src={item.imagePath ? item.imagePath : defaultPostImage}\r\n                    className=\"card-image\"\r\n                  />\r\n                </div>\r\n              }\r\n              actions={\r\n                item.createdBy === userState.user.id\r\n                  ? [\r\n                      <EditTwoTone\r\n                        key=\"edit\"\r\n                        onClick={() =>\r\n                          router.push(\"/posts/edit\", { postID: item._id })\r\n                        }\r\n                      />,\r\n                      <DeleteTwoTone\r\n                        key=\"delete\"\r\n                        twoToneColor=\"red\"\r\n                        onClick={() => {\r\n                          setDeletePostID(item._id);\r\n                          setDeleteModal(true);\r\n                        }}\r\n                      />,\r\n                    ]\r\n                  : []\r\n              }\r\n            >\r\n              <Meta\r\n                title={item.title}\r\n                description={item.content.substring(0, 100) + \"...\"}\r\n                onClick={() => router.push(\"/posts/view\", { postID: item._id })}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n\r\n      <Modal\r\n        title=\"Delete Confirmation\"\r\n        visible={deleteModal}\r\n        onOk={() => confirmDelete()}\r\n        onCancel={() => setDeleteModal(false)}\r\n        centered\r\n      >\r\n        <p>Are you sure you want to delete post?</p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Jumbotron from \"../../components/Jumbotron/Jumbotron\";\r\nimport \"./Home.scss\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\nimport { Button, Row, Col, Divider, Card, Spin, Alert } from \"antd\";\r\nimport { RightCircleOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { postsAPI } from \"../../api/api\";\r\nimport defaultPostImage from \"./../../assets/images/default-post-image.jpg\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PostsGrid from \"../../components/PostsGrid/PostsGrid\";\r\nconst { Meta } = Card;\r\n\r\nexport default function Home() {\r\n  const router = useHistory();\r\n  const userState = useSelector((st) => st.user);\r\n  const [postsData, setPostsData] = useState([]);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  const [reload, setReload] = useState(false);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWidth(window.innerWidth);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [width]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const { data: res } = await postsAPI.getAll();\r\n        setPostsData(res);\r\n        setErrorMsg(null);\r\n      } catch (error) {\r\n        setErrorMsg(\"Error loading posts data\");\r\n        console.log(\"Error retrieving all posts...\", error);\r\n      }\r\n    })();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {userState.isLoggedIn ? (\r\n        <>\r\n          <Jumbotron>\r\n            <div className=\"home-jumbotron\">\r\n              {width <= 650 ? (\r\n                <div className=\"centered-section\">\r\n                  <h3>A blogging website for</h3>\r\n                  <h2>EVERYONE</h2>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    icon={<RightCircleOutlined />}\r\n                    size=\"large\"\r\n                    onClick={() => router.push(\"/posts/new\")}\r\n                  >\r\n                    Write a post now!\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div className=\"left-section\">\r\n                    <h3>A blogging website for</h3>\r\n                    <h2>EVERYONE</h2>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      shape=\"round\"\r\n                      icon={<RightCircleOutlined />}\r\n                      size=\"large\"\r\n                      onClick={() => router.push(\"/posts/new\")}\r\n                    >\r\n                      Get Started\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"right-section\">\r\n                    <Player\r\n                      autoplay\r\n                      loop\r\n                      src=\"https://assets10.lottiefiles.com/packages/lf20_GtqlRg.json\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Jumbotron>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Jumbotron>\r\n            <div className=\"home-jumbotron\">\r\n              {width <= 650 ? (\r\n                <div className=\"centered-section\">\r\n                  <h3>A blogging website for</h3>\r\n                  <h2>EVERYONE</h2>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    icon={<RightCircleOutlined />}\r\n                    size=\"large\"\r\n                    onClick={() => router.push(\"/login\")}\r\n                  >\r\n                    Get Started\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div className=\"left-section\">\r\n                    <h3>A blogging website for</h3>\r\n                    <h2>EVERYONE</h2>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      shape=\"round\"\r\n                      icon={<RightCircleOutlined />}\r\n                      size=\"large\"\r\n                      onClick={() => router.push(\"/login\")}\r\n                    >\r\n                      Get Started\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"right-section\">\r\n                    <Player\r\n                      autoplay\r\n                      loop\r\n                      src=\"https://assets10.lottiefiles.com/packages/lf20_GtqlRg.json\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Jumbotron>\r\n        </>\r\n      )}\r\n      <Divider orientation=\"center\">Most recent posts</Divider>\r\n      {errorMsg ? (\r\n        <div className=\"loader-container\">\r\n          <Alert message={errorMsg} type=\"error\" />\r\n        </div>\r\n      ) : postsData && Boolean(postsData.length) ? (\r\n        <PostsGrid data={postsData} reloadPosts={(param) => setReload(param)} />\r\n      ) : (\r\n        <div className=\"loader-container\">\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Button, Tag, message } from \"antd\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport isEmpty from \"lodash.isempty\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userAuthActions } from \"./../../redux/actions/actionCreator\";\r\n\r\nexport default function LoginForm() {\r\n  const router = useHistory();\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState({});\r\n  const dispatch = useDispatch();\r\n  const userState = useSelector((st) => st.user);\r\n\r\n  const onSubmit = async (event) => {\r\n    try {\r\n      dispatch(userAuthActions.login({ user: event }));\r\n    } catch (error) {\r\n      console.log(\"Error logging in user...\", error.response ?? error);\r\n      if (error.response && error.response.data) {\r\n        setSubmissionErrors(error.response.data);\r\n      } else setSubmissionErrors({ err: \"Login error\" });\r\n    }\r\n  };\r\n\r\n  const checkValidation = (values) => {\r\n    const errors = {};\r\n    if (!values.email?.trim()) {\r\n      errors.email = \"Please enter the email\";\r\n    }\r\n    if (!values.password?.trim()) {\r\n      errors.password = \"Please enter the password\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userState.error) {\r\n      setSubmissionErrors([userState.error]);\r\n    }\r\n    if (userState.isLoggedIn) {\r\n      message.success(\"User logged in successfully\");\r\n      router.push(\"/\");\r\n    }\r\n  }, [userState]);\r\n\r\n  return (\r\n    <FinalForm\r\n      initialValues={initialValues}\r\n      validate={checkValidation}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, submitting }) => (\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n          <Form.Item\r\n            label=\"Email\"\r\n            labelCol={{ span: 24 }}\r\n            wrapperCol={{ span: 24 }}\r\n          >\r\n            <Field name=\"email\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input {...input} name=\"email\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" labelCol={{ span: 24 }}>\r\n            <Field name=\"password\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input.Password {...input} name=\"password\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n\r\n          {!isEmpty(submissionErrors) && (\r\n            <div>\r\n              {typeof submissionErrors === \"object\" ? (\r\n                Object.entries(submissionErrors).map(([key, value]) => (\r\n                  <Tag color=\"error\" className=\"full-width\" key={key}>\r\n                    {value}\r\n                  </Tag>\r\n                ))\r\n              ) : (\r\n                <Tag color=\"error\" className=\"full-width\">\r\n                  {submissionErrors}\r\n                </Tag>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"buttons-wrapper-vertical\">\r\n            <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\r\n              Login\r\n            </Button>\r\n            <Button\r\n              htmlType=\"button\"\r\n              type=\"link\"\r\n              onClick={() => router.push(\"signup\")}\r\n            >\r\n              Don't have an account? Signup!\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\nimport \"./Login.scss\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nexport default function Login() {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWidth(window.innerWidth);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [width]);\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      {width <= 650 ? (\r\n        <div className=\"center-panel\">\r\n          <LoginForm />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"left-panel\">\r\n            <LoginForm />\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            <h2>\r\n              #1 Bloggin website for everyone around the globe. Totally free and\r\n              easy to use.\r\n            </h2>\r\n            <Player\r\n              autoplay\r\n              loop\r\n              src=\"https://assets2.lottiefiles.com/packages/lf20_jcikwtux.json\"\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Button, Tag, message } from \"antd\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { authAPI } from \"./../../api/api\";\r\nimport isEmpty from \"lodash.isempty\";\r\n\r\nexport default function SignupForm() {\r\n  const router = useHistory();\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState({});\r\n\r\n  const onSubmit = async (event) => {\r\n    try {\r\n      await authAPI.signup({ user: event });\r\n      message.success(\"User created successfully\");\r\n      router.push(\"/login\");\r\n    } catch (error) {\r\n      console.log(\"Error registering a new user...\", error.response ?? error);\r\n      if (error.response && error.response.data) {\r\n        setSubmissionErrors(error.response.data);\r\n      } else setSubmissionErrors({ err: \"Signup error\" });\r\n    }\r\n  };\r\n\r\n  const checkValidation = (values) => {\r\n    const errors = {};\r\n    if (!values.userName?.trim()) {\r\n      errors.userName = \"Please enter the userName\";\r\n    }\r\n    if (!values.password?.trim()) {\r\n      errors.password = \"Please enter the password\";\r\n    }\r\n    if (!values.confirmPassword?.trim()) {\r\n      errors.confirmPassword = \"Please enter the password confirmation\";\r\n    } else if (values.confirmPassword !== values.password) {\r\n      errors.confirmPassword = \"Passwords do not match\";\r\n    }\r\n    if (!values.email?.trim()) {\r\n      errors.email = \"Please enter the email\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <FinalForm\r\n      initialValues={initialValues}\r\n      validate={checkValidation}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, submitting }) => (\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n          <Form.Item\r\n            label=\"UserName\"\r\n            labelCol={{ span: 24 }}\r\n            wrapperCol={{ span: 24 }}\r\n          >\r\n            <Field name=\"userName\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input {...input} name=\"userName\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" labelCol={{ span: 24 }}>\r\n            <Field name=\"password\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input.Password {...input} name=\"password\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n          <Form.Item label=\"Confirm Password\" labelCol={{ span: 24 }}>\r\n            <Field name=\"confirmPassword\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input.Password {...input} name=\"confirmPassword\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n          <Form.Item label=\"Email\" labelCol={{ span: 24 }}>\r\n            <Field name=\"email\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input {...input} name=\"email\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n          <Form.Item label=\"Summary\" labelCol={{ span: 24 }}>\r\n            <Field name=\"summary\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input {...input} name=\"summary\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n          <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\r\n            <Field name=\"imagePath\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input {...input} name=\"imagePath\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n\r\n          {!isEmpty(submissionErrors) && (\r\n            <div>\r\n              {Object.entries(submissionErrors).map(([key, value]) => (\r\n                <Tag color=\"error\" className=\"full-width\" key={key}>\r\n                  {value}\r\n                </Tag>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"buttons-wrapper-vertical\">\r\n            <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\r\n              Signup\r\n            </Button>\r\n            <Button\r\n              htmlType=\"button\"\r\n              type=\"link\"\r\n              onClick={() => router.push(\"login\")}\r\n            >\r\n              Already have an account? Login!\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\nimport SignupForm from \"./SignupForm\";\r\n\r\nexport default function Signup() {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWidth(window.innerWidth);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [width]);\r\n\r\n  return (\r\n    <div className=\"signup\">\r\n      {width <= 650 ? (\r\n        <div className=\"center-panel\">\r\n          <h2 className=\"centered-text\">Sign up for free</h2>\r\n          <SignupForm />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"center-panel-small\">\r\n            <h2 className=\"centered-text\">Sign up for free</h2>\r\n            <SignupForm />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Button, Tag, message } from \"antd\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport isEmpty from \"lodash.isempty\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { postsAPI } from \"./../../api/api\";\r\n\r\nexport default function NewPost() {\r\n  const router = useHistory();\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState({});\r\n  const userState = useSelector((st) => st.user);\r\n\r\n  const onSubmit = async (event) => {\r\n    try {\r\n      await postsAPI.add({\r\n        post: { ...event, createdBy: userState.user.id },\r\n      });\r\n      message.success(\"Post created successfully\");\r\n      router.push(\"/\");\r\n    } catch (error) {\r\n      console.log(\"Error creating a new post...\", error.response ?? error);\r\n      if (error.response && error.response.data) {\r\n        setSubmissionErrors(error.response.data);\r\n      } else setSubmissionErrors({ err: \"Post error\" });\r\n    }\r\n  };\r\n\r\n  const checkValidation = (values) => {\r\n    const errors = {};\r\n    if (!values.title?.trim()) {\r\n      errors.title = \"Please enter the post's title\";\r\n    }\r\n    if (!values.content?.trim()) {\r\n      errors.content = \"Please enter the post's content\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h3>Create a new post</h3>\r\n      <FinalForm\r\n        initialValues={initialValues}\r\n        validate={checkValidation}\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit, submitting }) => (\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <Form.Item\r\n              label=\"Title\"\r\n              labelCol={{ span: 24 }}\r\n              wrapperCol={{ span: 24 }}\r\n            >\r\n              <Field name=\"title\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <Input {...input} name=\"title\" />\r\n                    {meta.touched && meta.error && (\r\n                      <Tag color=\"error\">{meta.error}</Tag>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Content\" labelCol={{ span: 24 }}>\r\n              <Field name=\"content\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <TextArea rows={4} {...input} name=\"content\" />\r\n                    {meta.touched && meta.error && (\r\n                      <Tag color=\"error\">{meta.error}</Tag>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\r\n              <Field name=\"imagePath\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <Input {...input} name=\"imagePath\" />\r\n                    {meta.touched && meta.error && (\r\n                      <Tag color=\"error\">{meta.error}</Tag>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form.Item>\r\n\r\n            {!isEmpty(submissionErrors) && (\r\n              <div>\r\n                {Object.entries(submissionErrors).map(([key, value]) => (\r\n                  <Tag color=\"error\" className=\"full-width\" key={key}>\r\n                    {value}\r\n                  </Tag>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"buttons-wrapper-horizontal\">\r\n              <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\r\n                Create Post\r\n              </Button>\r\n              <Button htmlType=\"button\" onClick={() => router.goBack()}>\r\n                Back\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { postsAPI } from \"./../../api/api\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport PostsGrid from \"../../components/PostsGrid/PostsGrid\";\r\nimport { Form, Input, Button, Tag, message, Image, Spin, Alert } from \"antd\";\r\n\r\nexport default function UserPosts() {\r\n  const userState = useSelector((st) => st.user);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [postsData, setPostsData] = useState([]);\r\n  const location = useLocation();\r\n  const [userName, setUserName] = useState(null);\r\n  const [userID, setUserID] = useState(null);\r\n  const [reload, setReload] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWidth(window.innerWidth);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [width]);\r\n\r\n  const getPostsData = async () => {\r\n    try {\r\n      const { data: res } = await postsAPI.getPostByUserId(\r\n        userID ?? userState.user.id\r\n      );\r\n      setPostsData(res);\r\n      setErrorMsg(null);\r\n    } catch (error) {\r\n      setPostsData([]);\r\n      setErrorMsg(\"Error loading user posts\");\r\n      console.log(\"Error retrieving all posts...\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (\r\n        location.state &&\r\n        location.state.hasOwnProperty(\"userID\") &&\r\n        location.state.hasOwnProperty(\"userName\")\r\n      ) {\r\n        setUserName(location.state.userName);\r\n        setUserID(location.state.userID);\r\n      }\r\n\r\n      getPostsData();\r\n    })();\r\n  }, [location.state]);\r\n\r\n  useEffect(() => {\r\n    getPostsData();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div className=\"posts-div\">\r\n      {errorMsg ? (\r\n        <div className=\"loader-container\">\r\n          <Alert message={errorMsg} type=\"error\" />\r\n        </div>\r\n      ) : Object.keys(postsData).length === 0 ? (\r\n        <div className=\"loader-container\">\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <h2>{userName ? `Posts of user ${userName}` : \"Your posts\"}</h2>\r\n          {Boolean(postsData) && Boolean(postsData.length) ? (\r\n            <PostsGrid\r\n              data={postsData}\r\n              reloadPosts={(reloadTrigger) => setReload(reloadTrigger)}\r\n            />\r\n          ) : (\r\n            <h2>You have no posts yet</h2>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Form, Input, Button, Tag, message } from \"antd\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport isEmpty from \"lodash.isempty\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { postsAPI } from \"./../../api/api\";\r\n\r\nexport default function EditPost() {\r\n  const router = useHistory();\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState({});\r\n  const userState = useSelector((st) => st.user);\r\n  const location = useLocation();\r\n  const [postID, setPostID] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let id = null;\r\n    (async () => {\r\n      if (location.state && location.state.hasOwnProperty(\"postID\")) {\r\n        id = location.state.postID;\r\n        setPostID(id);\r\n        try {\r\n          const { data: res } = await postsAPI.getOne(id);\r\n          console.log(res);\r\n          setInitialValues(res);\r\n        } catch (error) {\r\n          console.log(\"Error retrieving one post...\", error);\r\n        }\r\n      } else {\r\n        message.error(\"Post ID was not provided\");\r\n        router.goBack();\r\n      }\r\n    })();\r\n  }, [location.state]);\r\n\r\n  const onSubmit = async (event) => {\r\n    try {\r\n      await postsAPI.update({\r\n        post: event,\r\n      });\r\n      message.success(\"Post updated successfully\");\r\n      router.goBack();\r\n    } catch (error) {\r\n      console.log(\"Error updating post...\", error.response ?? error);\r\n      if (error.response && error.response.data) {\r\n        setSubmissionErrors(error.response.data);\r\n      } else setSubmissionErrors({ err: \"Update error\" });\r\n    }\r\n  };\r\n\r\n  const checkValidation = (values) => {\r\n    const errors = {};\r\n    if (!values.title?.trim()) {\r\n      errors.title = \"Please enter the post's title\";\r\n    }\r\n    if (!values.content?.trim()) {\r\n      errors.content = \"Please enter the post's content\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h3>Edit post</h3>\r\n      <FinalForm\r\n        initialValues={initialValues}\r\n        validate={checkValidation}\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit, submitting }) => (\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <Form.Item\r\n              label=\"Title\"\r\n              labelCol={{ span: 24 }}\r\n              wrapperCol={{ span: 24 }}\r\n            >\r\n              <Field name=\"title\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <Input {...input} name=\"title\" />\r\n                    {meta.touched && meta.error && (\r\n                      <Tag color=\"error\">{meta.error}</Tag>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Content\" labelCol={{ span: 24 }}>\r\n              <Field name=\"content\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <TextArea rows={4} {...input} name=\"content\" />\r\n                    {meta.touched && meta.error && (\r\n                      <Tag color=\"error\">{meta.error}</Tag>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\r\n              <Field name=\"imagePath\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <Input {...input} name=\"imagePath\" />\r\n                    {meta.touched && meta.error && (\r\n                      <Tag color=\"error\">{meta.error}</Tag>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form.Item>\r\n\r\n            {!isEmpty(submissionErrors) && (\r\n              <div>\r\n                {Object.entries(submissionErrors).map(([key, value]) => (\r\n                  <Tag color=\"error\" className=\"full-width\" key={key}>\r\n                    {value}\r\n                  </Tag>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"buttons-wrapper-horizontal\">\r\n              <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\r\n                Update Post\r\n              </Button>\r\n              <Button htmlType=\"button\" onClick={() => router.goBack()}>\r\n                Back\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default-user.c3f94521.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Button, Tag, message, Image, Spin, Alert } from \"antd\";\r\nimport {\r\n  EditFilled,\r\n  LockFilled,\r\n  SaveFilled,\r\n  CaretLeftOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport isEmpty from \"lodash.isempty\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { usersAPI } from \"./../../api/api\";\r\nimport defaultUser from \"./../../assets/images/default-user.png\";\r\nimport \"./UserProfile.scss\";\r\nimport { userAuthActions } from \"./../../redux/actions/actionCreator\";\r\n\r\nexport default function UserProfile() {\r\n  const router = useHistory();\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState({});\r\n  const userState = useSelector((st) => st.user);\r\n  const [editing, setEditing] = useState(false);\r\n  const [editingPassword, setEditingPassword] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (userState && userState.user && userState.user.id) {\r\n        try {\r\n          const { data: res } = await usersAPI.getOne(userState.user.id);\r\n          setInitialValues(res);\r\n          setErrorMsg(null);\r\n        } catch (error) {\r\n          setInitialValues({});\r\n          setErrorMsg(\"Error loading user profile\");\r\n          console.log(\"Error retrieving user data...\", error);\r\n        }\r\n      } else {\r\n        message.error(\"An error occured while retrieving user ID\");\r\n        router.push(\"/\");\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const checkValidation = (values) => {\r\n    const errors = {};\r\n    if (editing && !values.userName?.trim()) {\r\n      errors.userName = \"Please enter the userName\";\r\n    }\r\n    if (editingPassword && !values.oldPassword?.trim()) {\r\n      errors.password = \"Please enter the old password\";\r\n    }\r\n    if (editingPassword && !values.password?.trim()) {\r\n      errors.password = \"Please enter the password\";\r\n    }\r\n    if (editingPassword && !values.confirmPassword?.trim()) {\r\n      errors.confirmPassword = \"Please enter the password confirmation\";\r\n    } else if (editingPassword && values.confirmPassword !== values.password) {\r\n      errors.confirmPassword = \"Passwords do not match\";\r\n    }\r\n    if (editing && !values.email?.trim()) {\r\n      errors.email = \"Please enter the email\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    setSubmissionErrors([]);\r\n    try {\r\n      await usersAPI.update({ user: event });\r\n      dispatch(userAuthActions.updateUser(event));\r\n      message.success(\"User profile updated successfully\");\r\n      setEditing(false);\r\n      setEditingPassword(false);\r\n      setInitialValues(event);\r\n    } catch (error) {\r\n      console.log(\"Error updating user profile..\", error.response ?? error);\r\n      if (error.response && error.response.data) {\r\n        setSubmissionErrors(error.response.data);\r\n      } else setSubmissionErrors({ err: \"Profile update error\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"user-profile\">\r\n        {errorMsg ? (\r\n          <div className=\"loader-container\">\r\n            <Alert message={errorMsg} type=\"error\" />\r\n          </div>\r\n        ) : Object.keys(initialValues).length === 0 ? (\r\n          <div className=\"loader-container\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <h2 className=\"centered-text \">\r\n              {initialValues.userName}'s Profile\r\n            </h2>\r\n            <div className=\"user-image centered-text \">\r\n              <Image\r\n                className=\"image\"\r\n                src={initialValues.imagePath ?? defaultUser}\r\n              />\r\n            </div>\r\n            <div className=\"user-info\">\r\n              <FinalForm\r\n                initialValues={initialValues}\r\n                validate={checkValidation}\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, submitting, form }) => (\r\n                  <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <Form.Item\r\n                      label=\"UserName\"\r\n                      labelCol={{ span: 24 }}\r\n                      wrapperCol={{ span: 24 }}\r\n                    >\r\n                      <Field name=\"userName\">\r\n                        {({ input, meta }) => (\r\n                          <div>\r\n                            <Input\r\n                              {...input}\r\n                              name=\"userName\"\r\n                              readOnly={!editing}\r\n                              className={!editing && \"disabled\"}\r\n                            />\r\n                            {meta.touched && meta.error && (\r\n                              <Tag color=\"error\">{meta.error}</Tag>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </Field>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Email\" labelCol={{ span: 24 }}>\r\n                      <Field name=\"email\">\r\n                        {({ input, meta }) => (\r\n                          <div>\r\n                            <Input\r\n                              {...input}\r\n                              name=\"email\"\r\n                              readOnly={!editing}\r\n                              className={!editing && \"disabled\"}\r\n                            />\r\n                            {meta.touched && meta.error && (\r\n                              <Tag color=\"error\">{meta.error}</Tag>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </Field>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Summary\" labelCol={{ span: 24 }}>\r\n                      <Field name=\"summary\">\r\n                        {({ input, meta }) => (\r\n                          <div>\r\n                            <Input\r\n                              {...input}\r\n                              value={\r\n                                !initialValues.summary && !editing\r\n                                  ? \"No content\"\r\n                                  : initialValues.summary\r\n                              }\r\n                              name=\"summary\"\r\n                              readOnly={!editing}\r\n                              className={!editing && \"disabled\"}\r\n                            />\r\n                            {meta.touched && meta.error && (\r\n                              <Tag color=\"error\">{meta.error}</Tag>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </Field>\r\n                    </Form.Item>\r\n                    {editing && (\r\n                      <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\r\n                        <Field name=\"imagePath\">\r\n                          {({ input, meta }) => (\r\n                            <div>\r\n                              <Input {...input} name=\"imagePath\" />\r\n                              {meta.touched && meta.error && (\r\n                                <Tag color=\"error\">{meta.error}</Tag>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </Field>\r\n                      </Form.Item>\r\n                    )}\r\n\r\n                    {editingPassword && (\r\n                      <>\r\n                        <Form.Item label=\"Old Password\" labelCol={{ span: 24 }}>\r\n                          <Field name=\"oldPassword\">\r\n                            {({ input, meta }) => (\r\n                              <div>\r\n                                <Input.Password\r\n                                  {...input}\r\n                                  name=\"oldPassword\"\r\n                                  className=\"no-radius\"\r\n                                />\r\n                                {meta.touched && meta.error && (\r\n                                  <Tag color=\"error\">{meta.error}</Tag>\r\n                                )}\r\n                              </div>\r\n                            )}\r\n                          </Field>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Password\" labelCol={{ span: 24 }}>\r\n                          <Field name=\"password\">\r\n                            {({ input, meta }) => (\r\n                              <div>\r\n                                <Input.Password {...input} name=\"password\" />\r\n                                {meta.touched && meta.error && (\r\n                                  <Tag color=\"error\">{meta.error}</Tag>\r\n                                )}\r\n                              </div>\r\n                            )}\r\n                          </Field>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          label=\"Confirm Password\"\r\n                          labelCol={{ span: 24 }}\r\n                        >\r\n                          <Field name=\"confirmPassword\">\r\n                            {({ input, meta }) => (\r\n                              <div>\r\n                                <Input.Password\r\n                                  {...input}\r\n                                  name=\"confirmPassword\"\r\n                                />\r\n                                {meta.touched && meta.error && (\r\n                                  <Tag color=\"error\">{meta.error}</Tag>\r\n                                )}\r\n                              </div>\r\n                            )}\r\n                          </Field>\r\n                        </Form.Item>\r\n                      </>\r\n                    )}\r\n\r\n                    {!isEmpty(submissionErrors) && (\r\n                      <div>\r\n                        {Object.entries(submissionErrors).map(\r\n                          ([key, value]) => (\r\n                            <Tag color=\"error\" className=\"full-width\" key={key}>\r\n                              {value}\r\n                            </Tag>\r\n                          )\r\n                        )}\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"buttons-wrapper-horizontal m-auto\">\r\n                      {!(editing || editingPassword) && (\r\n                        <>\r\n                          <Button\r\n                            htmlType=\"button\"\r\n                            type=\"primary\"\r\n                            icon={<EditFilled />}\r\n                            onClick={() => {\r\n                              setEditing(true);\r\n                              setEditingPassword(false);\r\n                            }}\r\n                          >\r\n                            Edit Profile\r\n                          </Button>\r\n                          <Button\r\n                            htmlType=\"button\"\r\n                            type=\"primary\"\r\n                            icon={<LockFilled />}\r\n                            onClick={() => {\r\n                              setEditing(false);\r\n                              setEditingPassword(true);\r\n                            }}\r\n                          >\r\n                            Edit Password\r\n                          </Button>\r\n                        </>\r\n                      )}\r\n\r\n                      {(editing || editingPassword) && (\r\n                        <>\r\n                          <Button\r\n                            disabled={submitting}\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            icon={<SaveFilled />}\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                          <Button\r\n                            htmlType=\"button\"\r\n                            type=\"primary\"\r\n                            icon={<CaretLeftOutlined />}\r\n                            onClick={() => {\r\n                              setEditing(false);\r\n                              setEditingPassword(false);\r\n                              form.reset();\r\n                            }}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </form>\r\n                )}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Button, Tag, message, Alert } from \"antd\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport isEmpty from \"lodash.isempty\";\r\nimport { commentsAPI } from \"./../../api/api\";\r\n\r\nexport default function CommentForm({ createdBy, postId, setReloadingFlag }) {\r\n  const router = useHistory();\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState(null);\r\n  const [reloading, setReloading] = useState(false);\r\n\r\n  const onSubmit = async (event) => {\r\n    if (isEmpty(event) || !event.content) {\r\n      setSubmissionErrors(\"Can't submit an empty comment\");\r\n    } else {\r\n      setSubmissionErrors(null);\r\n    }\r\n\r\n    try {\r\n      await commentsAPI.add({\r\n        comment: { ...event, createdBy: createdBy, postId: postId },\r\n      });\r\n      message.success(\"Comment added successfully\");\r\n      setReloading(!reloading);\r\n      setReloadingFlag(reloading);\r\n    } catch (error) {\r\n      console.log(\"Error adding comment...\", error.response ?? error);\r\n      if (error.response && error.response.data) {\r\n        setSubmissionErrors(error.response.data);\r\n      } else setSubmissionErrors(\"Error adding comment\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-form\">\r\n      <FinalForm\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        render={({ form, handleSubmit, submitting, reset }) => (\r\n          <form\r\n            onSubmit={async (event) => {\r\n              await handleSubmit(event);\r\n              form.reset();\r\n            }}\r\n          >\r\n            <Form.Item labelCol={{ span: 24 }}>\r\n              <Field name=\"content\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <Input\r\n                      {...input}\r\n                      name=\"content\"\r\n                      placeholder=\"Add a comment\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form.Item>\r\n\r\n            {submissionErrors && (\r\n              <Alert\r\n                message={submissionErrors}\r\n                type=\"error\"\r\n                showIcon\r\n                closable\r\n              />\r\n            )}\r\n\r\n            <div className=\"comments-btns-container\">\r\n              <Button\r\n                disabled={submitting}\r\n                htmlType=\"button\"\r\n                onClick={form.reset}\r\n              >\r\n                Clear\r\n              </Button>\r\n\r\n              <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\r\n                Comment\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport defaultUser from \"./../../assets/images/default-user.png\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport \"./Comments.scss\";\r\nimport moment from \"moment\";\r\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Form, Input, Button, Alert } from \"antd\";\r\n\r\nexport default function CommentsDesktop({\r\n  comment,\r\n  index,\r\n  userState,\r\n  setDeleteModal,\r\n  selectedEditCommentID,\r\n  setDeleteSelectedCommentID,\r\n  setEditSelectedCommentID,\r\n  onSubmit,\r\n}) {\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState(null);\r\n  return (\r\n    <div className=\"comment-container full-width-comment\" key={index}>\r\n      <div>\r\n        <Avatar size=\"large\" src={comment.createdBy.imagePath ?? defaultUser} />\r\n      </div>\r\n      <div\r\n        className={\r\n          comment._id === selectedEditCommentID ? \"full-width-comment\" : \"cols\"\r\n        }\r\n      >\r\n        <div className=\"comment-text\">\r\n          <b>{comment.createdBy.userName}</b>\r\n          <div>\r\n            {comment._id === selectedEditCommentID ? (\r\n              <FinalForm\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                render={({ form, handleSubmit, submitting, reset }) => (\r\n                  <form\r\n                    className=\"comment-editing\"\r\n                    onSubmit={async (event) => {\r\n                      await handleSubmit(event);\r\n                      form.reset();\r\n                    }}\r\n                  >\r\n                    <Form.Item labelCol={{ span: 24 }}>\r\n                      <Field name=\"content\">\r\n                        {({ input, meta }) => (\r\n                          <div>\r\n                            <Input {...input} name=\"content\" />\r\n                          </div>\r\n                        )}\r\n                      </Field>\r\n                    </Form.Item>\r\n\r\n                    {submissionErrors && (\r\n                      <Alert\r\n                        message={submissionErrors}\r\n                        type=\"error\"\r\n                        showIcon\r\n                        closable\r\n                      />\r\n                    )}\r\n\r\n                    <div className=\"comments-btns-container\">\r\n                      <Button\r\n                        disabled={submitting}\r\n                        htmlType=\"submit\"\r\n                        type=\"primary\"\r\n                      >\r\n                        Update Comment\r\n                      </Button>\r\n                      <Button\r\n                        disabled={submitting}\r\n                        htmlType=\"button\"\r\n                        onClick={() => setEditSelectedCommentID(null)}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                )}\r\n              />\r\n            ) : (\r\n              comment.content\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"comment-date\">\r\n          {comment._id !== selectedEditCommentID && (\r\n            <>\r\n              {moment(comment.createdAt).fromNow(false)}\r\n              {comment.createdBy._id === userState.user.id && (\r\n                <div className=\"icons-cols\">\r\n                  <EditTwoTone\r\n                    key=\"edit\"\r\n                    onClick={() => {\r\n                      setEditSelectedCommentID(comment._id);\r\n                      setInitialValues({ ...comment });\r\n                    }}\r\n                  />\r\n                  <DeleteTwoTone\r\n                    key=\"delete\"\r\n                    twoToneColor=\"red\"\r\n                    onClick={() => {\r\n                      setDeleteSelectedCommentID(comment._id);\r\n                      setDeleteModal(true);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport defaultUser from \"./../../assets/images/default-user.png\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport \"./Comments.scss\";\r\nimport moment from \"moment\";\r\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Form, Input, Button, Alert } from \"antd\";\r\n\r\nexport default function CommentsMobile({\r\n  comment,\r\n  index,\r\n  userState,\r\n  setDeleteModal,\r\n  selectedEditCommentID,\r\n  setDeleteSelectedCommentID,\r\n  setEditSelectedCommentID,\r\n  onSubmit,\r\n}) {\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState(null);\r\n  return (\r\n    <div className=\"comment-container full-width-comment\" key={index}>\r\n      <div>\r\n        <Avatar size=\"large\" src={comment.createdBy.imagePath ?? defaultUser} />\r\n      </div>\r\n      <div className=\"full-width-comment\">\r\n        <div className=\"comment-text-mobile\">\r\n          <b>{comment.createdBy.userName}</b>\r\n          <div className=\"comment-date-mobile\">\r\n            {moment(comment.createdAt).fromNow(false)}\r\n          </div>\r\n          <div>\r\n            {comment._id === selectedEditCommentID ? (\r\n              <FinalForm\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                render={({ form, handleSubmit, submitting, reset }) => (\r\n                  <form\r\n                    className=\"comment-editing\"\r\n                    onSubmit={async (event) => {\r\n                      await handleSubmit(event);\r\n                      form.reset();\r\n                    }}\r\n                  >\r\n                    <Form.Item labelCol={{ span: 24 }}>\r\n                      <Field name=\"content\">\r\n                        {({ input, meta }) => (\r\n                          <div>\r\n                            <Input {...input} name=\"content\" />\r\n                          </div>\r\n                        )}\r\n                      </Field>\r\n                    </Form.Item>\r\n\r\n                    {submissionErrors && (\r\n                      <Alert\r\n                        message={submissionErrors}\r\n                        type=\"error\"\r\n                        showIcon\r\n                        closable\r\n                      />\r\n                    )}\r\n\r\n                    <div className=\"comments-btns-container\">\r\n                      <Button\r\n                        disabled={submitting}\r\n                        htmlType=\"submit\"\r\n                        type=\"primary\"\r\n                      >\r\n                        Update Comment\r\n                      </Button>\r\n                      <Button\r\n                        disabled={submitting}\r\n                        htmlType=\"button\"\r\n                        onClick={() => setEditSelectedCommentID(null)}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                )}\r\n              />\r\n            ) : (\r\n              comment.content\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {comment._id !== selectedEditCommentID && (\r\n          <>\r\n            {comment.createdBy._id === userState.user.id && (\r\n              <div className=\"icons-cols-mobile\">\r\n                <EditTwoTone\r\n                  key=\"edit\"\r\n                  onClick={() => {\r\n                    setEditSelectedCommentID(comment._id);\r\n                    setInitialValues({ ...comment });\r\n                  }}\r\n                />\r\n                <DeleteTwoTone\r\n                  key=\"delete\"\r\n                  twoToneColor=\"red\"\r\n                  onClick={() => {\r\n                    setDeleteSelectedCommentID(comment._id);\r\n                    setDeleteModal(true);\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport defaultUser from \"./../../assets/images/default-user.png\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport \"./Comments.scss\";\r\nimport moment from \"moment\";\r\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Form, Input, Button, message, Alert, Modal } from \"antd\";\r\nimport { commentsAPI } from \"../../api/api\";\r\nimport isEmpty from \"lodash.isempty\";\r\nimport CommentsDesktop from \"./CommentsDesktop\";\r\nimport CommentsMobile from \"./CommentsMobile\";\r\n\r\nexport default function Comments({\r\n  data,\r\n  setDeleteReloadingFlag,\r\n  setEditReloadingFlag,\r\n}) {\r\n  const userState = useSelector((st) => st.user);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [selectedDeleteCommentID, setDeleteSelectedCommentID] = useState(null);\r\n  const [selectedEditCommentID, setEditSelectedCommentID] = useState(null);\r\n  const [deleteReloading, setDeleteReloading] = useState(false);\r\n  const [editReloading, setEditReloading] = useState(false);\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState(null);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWidth(window.innerWidth);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [width]);\r\n\r\n  const confirmDelete = async () => {\r\n    try {\r\n      await commentsAPI.delete(selectedDeleteCommentID);\r\n      setDeleteModal(false);\r\n      message.success(\"Comment deleted successfully\");\r\n      setDeleteReloadingFlag(!deleteReloading);\r\n      setDeleteReloading(!deleteReloading);\r\n    } catch (error) {\r\n      console.log(\"Error deleting comment...\", error.response ?? error);\r\n      message.error(\"Error deleting comment\");\r\n      if (error.response && error.response.data) {\r\n        message.error(error.response.data);\r\n      } else message.error(\"Error deleting comment\");\r\n      setDeleteModal(false);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    if (isEmpty(event) || !event.content) {\r\n      setSubmissionErrors(\"Can't submit an empty comment\");\r\n    } else {\r\n      setSubmissionErrors(null);\r\n    }\r\n\r\n    try {\r\n      await commentsAPI.update({\r\n        comment: { ...event },\r\n      });\r\n      message.success(\"Comment updated successfully\");\r\n      setEditReloadingFlag(!editReloading);\r\n      setEditReloading(!editReloading);\r\n      setEditSelectedCommentID(null);\r\n    } catch (error) {\r\n      console.log(\"Error editing comment...\", error.response ?? error);\r\n      message.error(\"Error editing comment\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {data && Boolean(data.length)\r\n        ? data.length === 1\r\n          ? `${data.length} Comment`\r\n          : `${data.length} Comments`\r\n        : null}\r\n\r\n      {data.map((comment, index) =>\r\n        width >= 580 ? (\r\n          <CommentsDesktop\r\n            comment={comment}\r\n            index={index}\r\n            userState={userState}\r\n            setEditSelectedCommentID={setEditSelectedCommentID}\r\n            selectedEditCommentID={selectedEditCommentID}\r\n            setDeleteSelectedCommentID={setDeleteSelectedCommentID}\r\n            selectedDeleteCommentID={selectedDeleteCommentID}\r\n            setDeleteModal={setDeleteModal}\r\n            onSubmit={onSubmit}\r\n          />\r\n        ) : (\r\n          <CommentsMobile\r\n            comment={comment}\r\n            index={index}\r\n            userState={userState}\r\n            setEditSelectedCommentID={setEditSelectedCommentID}\r\n            selectedEditCommentID={selectedEditCommentID}\r\n            setDeleteSelectedCommentID={setDeleteSelectedCommentID}\r\n            selectedDeleteCommentID={selectedDeleteCommentID}\r\n            setDeleteModal={setDeleteModal}\r\n            onSubmit={onSubmit}\r\n          />\r\n        )\r\n      )}\r\n\r\n      <Modal\r\n        title=\"Delete Confirmation\"\r\n        visible={deleteModal}\r\n        onOk={() => confirmDelete()}\r\n        onCancel={() => setDeleteModal(false)}\r\n        centered\r\n      >\r\n        <p>Are you sure you want to delete this comment?</p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Button, message, Image, Spin, Alert, Modal, Divider } from \"antd\";\r\nimport { EditFilled, DeleteFilled } from \"@ant-design/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { postsAPI } from \"./../../api/api\";\r\nimport \"./Post.scss\";\r\nimport defaultPostImage from \"./../../assets/images/default-post-image.jpg\";\r\nimport defaultUser from \"./../../assets/images/default-user.png\";\r\nimport moment from \"moment\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport CommentForm from \"../Comments/CommentForm\";\r\nimport Comments from \"../Comments/Comments\";\r\n\r\nexport default function Post() {\r\n  const [postData, setPostData] = useState({});\r\n  const router = useHistory();\r\n  const userState = useSelector((st) => st.user);\r\n  const location = useLocation();\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [deletePostID, setDeletePostID] = useState(null);\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  const [reloadDelete, setReloadDelete] = useState(null);\r\n  const [reloadEdit, setReloadEdit] = useState(null);\r\n  const [reloadPost, setReloadPost] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let id = null;\r\n    (async () => {\r\n      if (location.state && location.state.hasOwnProperty(\"postID\")) {\r\n        id = location.state.postID;\r\n        try {\r\n          const { data: res } = await postsAPI.getOne(id);\r\n          setPostData(res);\r\n          setErrorMsg(null);\r\n        } catch (error) {\r\n          setPostData({});\r\n          setErrorMsg(\"Error loading post data\");\r\n          console.log(\"Error retrieving one post...\", error);\r\n        }\r\n      } else {\r\n        message.error(\"An error occured while retrieving post ID\");\r\n        router.push(\"/\");\r\n      }\r\n    })();\r\n  }, [location.state, reloadDelete, reloadPost, reloadEdit]);\r\n\r\n  const confirmDelete = async () => {\r\n    try {\r\n      await postsAPI.delete(deletePostID);\r\n      setDeleteModal(false);\r\n      message.success(\"Post deleted successfully\");\r\n      router.goBack();\r\n    } catch (error) {\r\n      console.log(\"Error deleting post...\", error.response ?? error);\r\n      message.error(\"Error deleting post\");\r\n      if (error.response && error.response.data) {\r\n        message.error(error.response.data);\r\n      } else message.error(\"Error deleting post\");\r\n      setDeleteModal(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"view-post\">\r\n      {errorMsg ? (\r\n        <div className=\"loader-container\">\r\n          <Alert message={errorMsg} type=\"error\" />\r\n        </div>\r\n      ) : Object.keys(postData).length === 0 ? (\r\n        <div className=\"loader-container\">\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"post-header\">\r\n            <h1>{postData.title}</h1>\r\n            <div className=\"two-cols\">\r\n              <div>\r\n                <Avatar\r\n                  size=\"large\"\r\n                  src={postData.userImageUrl ?? defaultUser}\r\n                />\r\n                &nbsp;\r\n                {postData.createdByName}\r\n              </div>\r\n              <p>{moment(postData.createdAt).format(\"DD MMMM YYYY\")}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"centered-text\">\r\n            <Image\r\n              src={postData.imagePath ? postData.imagePath : defaultPostImage}\r\n            />\r\n          </div>\r\n          <div className=\"post-content\">{postData.content}</div>\r\n          {postData.createdBy === userState.user.id && (\r\n            <div className=\"buttons-wrapper-horizontal\">\r\n              <Button\r\n                htmlType=\"button\"\r\n                type=\"primary\"\r\n                icon={<EditFilled />}\r\n                onClick={() =>\r\n                  router.push(\"/posts/edit\", { postID: postData._id })\r\n                }\r\n              >\r\n                Edit\r\n              </Button>\r\n\r\n              <Button\r\n                htmlType=\"button\"\r\n                type=\"primary\"\r\n                icon={<DeleteFilled />}\r\n                danger\r\n                onClick={() => {\r\n                  setDeletePostID(postData._id);\r\n                  setDeleteModal(true);\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </div>\r\n          )}\r\n          {Boolean(userState.user.id) && (\r\n            <>\r\n              <Divider />\r\n              <CommentForm\r\n                createdBy={userState.user.id}\r\n                postId={postData._id}\r\n                setReloadingFlag={(value) => setReloadPost(value)}\r\n              />\r\n            </>\r\n          )}\r\n          <Comments\r\n            data={postData.comments}\r\n            setDeleteReloadingFlag={(value) => setReloadDelete(value)}\r\n            setEditReloadingFlag={(value) => setReloadEdit(value)}\r\n          />\r\n\r\n          <Modal\r\n            title=\"Delete Confirmation\"\r\n            visible={deleteModal}\r\n            onOk={() => confirmDelete()}\r\n            onCancel={() => setDeleteModal(false)}\r\n            centered\r\n          >\r\n            <p>Are you sure you want to delete post?</p>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst LoggedInRoute = ({ component: Component, ...rest }) => {\r\n  const userState = useSelector((st) => st.user);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        userState.isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoggedInRoute;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst NotLoggedInRoute = ({ component: Component, ...rest }) => {\r\n  const userState = useSelector((st) => st.user);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !userState.isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default NotLoggedInRoute;\r\n","import React from \"react\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"my-2-auto\">\r\n      <h1 className=\"centered-text\">Page not found</h1>\r\n      <Player\r\n        autoplay\r\n        loop\r\n        style={{ height: \"500px\" }}\r\n        src=\"https://assets1.lottiefiles.com/packages/lf20_zxliqmhr.json\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Login from \"./pages/Login/Login\";\r\nimport Signup from \"./pages/Signup/Signup\";\r\nimport NewPost from \"./pages/Posts/NewPost\";\r\nimport UserPosts from \"./pages/Posts/UserPosts\";\r\nimport EditPost from \"./pages/Posts/EditPost\";\r\nimport UserProfile from \"./pages/Users/UserProfile\";\r\nimport Post from \"./pages/Posts/Post\";\r\nimport LoggedInRoute from \"./LoggedInRoute\";\r\nimport NotLoggedInRoute from \"./NotLoggedInRoute\";\r\nimport NotFound from \"./pages/NotFound/NotFound\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n        <NotLoggedInRoute exact path=\"/login\" component={Login} />\r\n        <NotLoggedInRoute exact path=\"/signup\" component={Signup} />\r\n        <Route exact path=\"/user/posts\" component={UserPosts} />\r\n        <Route exact path=\"/user/profile\" component={UserProfile} />\r\n        <Route exact path=\"/posts/view\" component={Post} />\r\n        <LoggedInRoute exact path=\"/posts/new\" component={NewPost} />\r\n        <LoggedInRoute exact path=\"/posts/edit\" component={EditPost} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { userAuth as actions } from \"./../actions/index\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { saveState, loadState } from \"./../store/sessionStorage\";\r\n\r\nlet initialState;\r\nconst emptyState = {\r\n  isLoggedIn: false,\r\n  error: \"\",\r\n  token: null,\r\n  user: {\r\n    id: \"\",\r\n    userName: \"\",\r\n    imagePath: \"\",\r\n  },\r\n};\r\nif (loadState() && loadState().token) {\r\n  const decodedToken = jwt.decode(loadState().token);\r\n  initialState = {\r\n    ...loadState(),\r\n    user: {\r\n      id: decodedToken.id,\r\n      userName: decodedToken.userName,\r\n      imagePath: decodedToken.imagePath,\r\n    },\r\n  };\r\n} else {\r\n  initialState = { ...emptyState };\r\n}\r\n\r\nexport const userAuthReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.LOGIN_SUCCESS:\r\n      let newState;\r\n      if (loadState() && loadState().token) {\r\n        const decodedToken = jwt.decode(loadState().token);\r\n        newState = {\r\n          ...loadState(),\r\n          user: {\r\n            id: decodedToken.id,\r\n            userName: decodedToken.userName,\r\n            imagePath: decodedToken.imagePath,\r\n          },\r\n        };\r\n      }\r\n      return newState;\r\n\r\n    case actions.UPDATE_USER:\r\n      let updatedState = {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          imagePath: action.payload.imagePath,\r\n          userName: action.payload.userName,\r\n        },\r\n      };\r\n      saveState(updatedState);\r\n      return updatedState;\r\n\r\n    case actions.LOGOUT:\r\n      saveState(emptyState);\r\n      return emptyState;\r\n\r\n    case actions.LOGIN_FAILED:\r\n      if (action.payload) {\r\n        let newState = {\r\n          token: null,\r\n          isLoggedIn: false,\r\n          error: action.payload,\r\n        };\r\n        saveState(newState);\r\n        return newState;\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = sessionStorage.getItem(\"user\");\r\n\r\n    if (serializedState === null) {\r\n      return {\r\n        isLoggedIn: false,\r\n        errors: \"\",\r\n        token: null,\r\n      };\r\n    }\r\n\r\n    return JSON.parse(serializedState);\r\n  } catch (error) {\r\n    console.log(\"Load state error...\", error.response ?? error);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    sessionStorage.clear();\r\n    const serializedState = JSON.stringify(state);\r\n    sessionStorage.setItem(\"user\", serializedState);\r\n  } catch (error) {\r\n    console.log(\"Save state error...\", error.response ?? error);\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { userAuthReducer } from \"./userAuthReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userAuthReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { put, takeEvery } from \"redux-saga/effects\";\r\nimport { userAuth as actions } from \"../actions\";\r\nimport { userAuthActions } from \"./../actions/actionCreator\";\r\nimport { authAPI } from \"./../../api/api\";\r\nimport { saveState } from \"./../store/sessionStorage\";\r\n\r\nfunction* createLogin(action) {\r\n  try {\r\n    const response = yield authAPI.login(action.payload);\r\n    if (response.data.token) {\r\n      const token = response.data.token;\r\n      saveState({\r\n        isLoggedIn: true,\r\n        error: \"\",\r\n        token: token,\r\n      });\r\n      yield put(\r\n        userAuthActions.loginSuccess({\r\n          token,\r\n        })\r\n      );\r\n    }\r\n  } catch (err) {\r\n    yield put(userAuthActions.loginFailed(\"Login data is incorrect\"));\r\n  }\r\n}\r\n\r\nexport function* createLoginStart() {\r\n  yield takeEvery(actions.LOGIN, createLogin);\r\n}\r\n","import { all, call } from \"redux-saga/effects\";\r\nimport { createLoginStart } from \"./userAuthSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(createLoginStart)]);\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\nimport rootSaga from \"../sagas/rootSaga\";\r\n\r\n// const persistedState = loadState();\r\n\r\nconst onSagaUncaughtErrors = (err, errInfo) => {\r\n  console.log({ onSagaError: \"saga error\", err, errInfo });\r\n};\r\n\r\nconst sagaMiddleware = createSagaMiddleware({ onError: onSagaUncaughtErrors });\r\nconst loggerMiddleware = createLogger();\r\n\r\nconst middleWares = [loggerMiddleware, sagaMiddleware];\r\n\r\nlet reduxStore;\r\n\r\nconst storeConfig = () => {\r\n  const store = createStore(rootReducer, applyMiddleware(...middleWares));\r\n\r\n  // start redux sagas\r\n  sagaMiddleware.run(rootSaga);\r\n  reduxStore = store;\r\n\r\n  return store;\r\n};\r\n\r\nexport { reduxStore };\r\nexport default storeConfig;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/styles/index.scss\";\r\nimport App from \"./App\";\r\nimport \"antd/dist/antd.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport storeConfig from \"./redux/store/store\";\r\n\r\nconst store = storeConfig();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}