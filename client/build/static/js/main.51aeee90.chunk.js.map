{"version":3,"sources":["assets/images/blogging.png","redux/actions/index.js","redux/actions/actionCreator.js","components/Navbars/HorizontalNavbar.js","components/Footer/FooterComponent.js","components/Layout/Layout.js","components/Jumbotron/Jumbotron.js","api/api.js","assets/images/default-post-image.jpg","pages/Home/Home.js","pages/Login/LoginForm.js","pages/Login/Login.js","pages/Signup/SignupForm.js","pages/Signup/Signup.js","pages/Posts/NewPost.js","components/PostsGrid/PostsGrid.js","pages/Posts/UserPosts.js","pages/Posts/EditPost.js","assets/images/default-user.png","pages/Users/UserProfile.js","pages/Posts/Post.js","LoggedInRoute.js","NotLoggedInRoute.js","pages/NotFound/NotFound.js","App.js","redux/reducers/userAuthReducer.js","redux/store/sessionStorage.js","redux/reducers/rootReducer.js","redux/sagas/userAuthSaga.js","redux/sagas/rootSaga.js","redux/store/store.js","index.js"],"names":["userAuth","userAuthActions","payload","type","err","SubMenu","Menu","HorizontalNavbar","userState","useSelector","st","user","dispatch","useDispatch","selectedKeys","mode","theme","Item","className","href","src","blogLogo","shape","isLoggedIn","icon","imageUrl","title","userName","SettingOutlined","LoginOutlined","onClick","FormOutlined","UserAddOutlined","FooterComponent","Header","AntdLayout","Footer","Sider","Content","Layout","children","Jumbotron","axiosConfig","baseURL","window","location","hostname","axios","Axios","create","authAPI","data","post","usersAPI","id","get","put","postsAPI","delete","Meta","Card","Home","router","useHistory","useState","postsData","setPostsData","innerWidth","width","setWidth","useEffect","handleResize","addEventListener","removeEventListener","a","res","console","log","RightCircleOutlined","size","push","autoplay","loop","orientation","map","item","xs","sm","md","lg","hoverable","cover","alt","imagePath","defaultPostImage","description","content","substring","_id","LoginForm","initialValues","submissionErrors","setSubmissionErrors","onSubmit","event","error","response","message","success","validate","values","errors","email","trim","password","render","handleSubmit","submitting","label","labelCol","span","wrapperCol","name","input","meta","touched","color","Password","isEmpty","Object","entries","key","value","disabled","htmlType","Login","SignupForm","confirmPassword","Signup","NewPost","createdBy","rows","goBack","PostsGrid","reloadPosts","deleteModal","setDeleteModal","deletePostID","setDeletePostID","reload","setReload","confirmDelete","actions","EditTwoTone","postID","DeleteTwoTone","twoToneColor","visible","onOk","onCancel","centered","UserPosts","useLocation","setUserName","userID","setUserID","getPostsData","state","hasOwnProperty","Boolean","length","reloadTrigger","EditPost","setInitialValues","setPostID","UserProfile","editing","setEditing","editingPassword","setEditingPassword","defaultUser","oldPassword","form","readOnly","summary","EditFilled","LockFilled","SaveFilled","CaretLeftOutlined","reset","Post","postData","setPostData","userImageUrl","createdByName","moment","createdAt","format","DeleteFilled","danger","LoggedInRoute","Component","component","rest","props","to","pathname","from","NotLoggedInRoute","NotFound","style","height","App","initialState","exact","path","loadState","serializedState","sessionStorage","getItem","token","JSON","parse","saveState","clear","stringify","setItem","emptyState","decodedToken","jwt","decode","rootReducer","combineReducers","action","newState","updatedState","createLogin","createLoginStart","takeEvery","rootSaga","all","call","sagaMiddleware","createSagaMiddleware","onError","errInfo","onSagaError","middleWares","createLogger","store","createStore","applyMiddleware","run","storeConfig","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.51aeee90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blogging.ffbd0b74.png\";","export const userAuth = {\r\n  LOGIN: \"LOGIN\",\r\n  UPDATE_USER: \"UPDATE_USER\",\r\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\r\n  LOGIN_FAILED: \"LOGIN_FAILED\",\r\n  LOGOUT: \"LOGOUT\",\r\n};\r\n","import { userAuth } from \"./index\";\r\n\r\nexport const userAuthActions = {\r\n  login: (payload) => ({\r\n    type: userAuth.LOGIN,\r\n    payload: payload,\r\n  }),\r\n  loginSuccess: (payload) => ({\r\n    type: userAuth.LOGIN_SUCCESS,\r\n    payload: payload,\r\n  }),\r\n  updateUser: (payload) => ({\r\n    type: userAuth.UPDATE_USER,\r\n    payload: payload,\r\n  }),\r\n  loginFailed: (err) => ({\r\n    type: userAuth.LOGIN_FAILED,\r\n    payload: err,\r\n  }),\r\n  logout: () => ({\r\n    type: userAuth.LOGOUT,\r\n  }),\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  LoginOutlined,\r\n  UserAddOutlined,\r\n  SettingOutlined,\r\n  FormOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Menu, Avatar } from \"antd\";\r\nimport blogLogo from \"./../../assets/images/blogging.png\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { userAuthActions } from \"./../../redux/actions/actionCreator\";\r\nconst { SubMenu } = Menu;\r\n\r\nexport default function HorizontalNavbar() {\r\n  const userState = useSelector((st) => st.user);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <Menu selectedKeys={\"logo\"} mode=\"horizontal\" theme=\"dark\">\r\n        <Menu.Item className=\"unhoverable-menu-item\">\r\n          <a href=\"/\">\r\n            <Avatar src={blogLogo} shape=\"square\" /> &nbsp; Blog App\r\n          </a>\r\n        </Menu.Item>\r\n\r\n        {userState.isLoggedIn ? (\r\n          <>\r\n            <SubMenu\r\n              key=\"SubMenu\"\r\n              icon={<Avatar src={userState.user.imageUrl} shape=\"circle\" />}\r\n              title={\" \" + userState.user.userName}\r\n              className=\"float-right unhoverable-menu-item\"\r\n            >\r\n              <Menu.Item key=\"userProfile\" icon={<SettingOutlined />}>\r\n                <a href=\"/user/settings\">User Settings</a>\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                key=\"logout\"\r\n                icon={<LoginOutlined />}\r\n                onClick={() => dispatch(userAuthActions.logout())}\r\n              >\r\n                Logout\r\n              </Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item\r\n              key=\"newPost\"\r\n              icon={<FormOutlined />}\r\n              className=\"float-right\"\r\n            >\r\n              <a href=\"/post/form\">New Post</a>\r\n            </Menu.Item>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Menu.Item\r\n              key=\"login\"\r\n              icon={<LoginOutlined />}\r\n              className=\"float-right\"\r\n            >\r\n              <a href=\"/login\">Login</a>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"logout\"\r\n              icon={<UserAddOutlined />}\r\n              className=\"float-right\"\r\n            >\r\n              <a href=\"/signup\">Signup</a>\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Footer.scss\";\r\n\r\nexport default function FooterComponent() {\r\n  return (\r\n    <div className=\"footer-component\">© MERN Blog 2021 by Maryam Aljanabi</div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport HorizontalNavbar from \"./../Navbars/HorizontalNavbar\";\r\nimport { Layout as AntdLayout } from \"antd\";\r\nimport FooterComponent from \"./../Footer/FooterComponent\";\r\n\r\nconst { Header, Footer, Sider, Content } = AntdLayout;\r\n\r\nexport default function Layout({ children }) {\r\n  return (\r\n    <AntdLayout>\r\n      <Header>\r\n        <HorizontalNavbar />\r\n      </Header>\r\n      <div className=\"page-container\">\r\n        <div className=\"page-content\">{children}</div>\r\n        <div className=\"footer\">\r\n          <FooterComponent />\r\n        </div>\r\n      </div>\r\n    </AntdLayout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Jumbotron.scss\";\r\n\r\nexport default function Jumbotron({ children }) {\r\n  return <div className=\"jumbotron\">{children}</div>;\r\n}\r\n","import Axios from \"axios\";\r\nconst axiosConfig = {\r\n  baseURL: `http://${window.location.hostname}:5000/api`,\r\n};\r\n\r\nconst axios = Axios.create(axiosConfig);\r\n\r\n// AUTH\r\nexport const authAPI = {\r\n  login: (data) => axios.post(`/auth/login`, data),\r\n  signup: (data) => axios.post(`/auth/signup`, data),\r\n};\r\n\r\n// USERS\r\nexport const usersAPI = {\r\n  getAll: () => axios.get(`/users`),\r\n  getOne: (id) => axios.get(`/users/${id}`),\r\n  add: (data) => axios.post(`/users`, data),\r\n  update: (data) => axios.put(`/users`, data),\r\n  delete: (id) => axios.delete(`/users/${id}`),\r\n};\r\n\r\n// POSTS\r\nexport const postsAPI = {\r\n  getAll: () => axios.get(`/posts`),\r\n  getPostByUserId: (id) => axios.get(`/posts/user/${id}`),\r\n  getOne: (id) => axios.get(`/posts/${id}`),\r\n  add: (data) => axios.post(`/posts`, data),\r\n  update: (data) => axios.put(`/posts`, data),\r\n  delete: (id) => axios.delete(`/posts/${id}`),\r\n};\r\n","export default __webpack_public_path__ + \"static/media/default-post-image.dd982f18.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport Jumbotron from \"../../components/Jumbotron/Jumbotron\";\r\nimport \"./Home.scss\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\nimport { Button, Row, Col, Divider, Card } from \"antd\";\r\nimport { RightCircleOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { postsAPI } from \"../../api/api\";\r\nimport defaultPostImage from \"./../../assets/images/default-post-image.jpg\";\r\nimport { useSelector } from \"react-redux\";\r\nconst { Meta } = Card;\r\n\r\nexport default function Home() {\r\n  const router = useHistory();\r\n  const userState = useSelector((st) => st.user);\r\n  const [postsData, setPostsData] = useState([]);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWidth(window.innerWidth);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [width]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const { data: res } = await postsAPI.getAll();\r\n        setPostsData(res);\r\n      } catch (error) {\r\n        console.log(\"Error retrieving all posts...\", error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {userState.isLoggedIn ? (\r\n        <>\r\n          <Jumbotron>\r\n            <div className=\"home-jumbotron\">\r\n              {width <= 650 ? (\r\n                <div className=\"centered-section\">\r\n                  <h3>A blogging website for</h3>\r\n                  <h2>EVERYONE</h2>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    icon={<RightCircleOutlined />}\r\n                    size=\"large\"\r\n                    onClick={() => router.push(\"/signin\")}\r\n                  >\r\n                    Write a post now!\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div className=\"left-section\">\r\n                    <h3>A blogging website for</h3>\r\n                    <h2>EVERYONE</h2>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      shape=\"round\"\r\n                      icon={<RightCircleOutlined />}\r\n                      size=\"large\"\r\n                      onClick={() => router.push(\"/signin\")}\r\n                    >\r\n                      Get Started\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"right-section\">\r\n                    <Player\r\n                      autoplay\r\n                      loop\r\n                      src=\"https://assets10.lottiefiles.com/packages/lf20_GtqlRg.json\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Jumbotron>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Jumbotron>\r\n            <div className=\"home-jumbotron\">\r\n              {width <= 650 ? (\r\n                <div className=\"centered-section\">\r\n                  <h3>A blogging website for</h3>\r\n                  <h2>EVERYONE</h2>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    icon={<RightCircleOutlined />}\r\n                    size=\"large\"\r\n                    onClick={() => router.push(\"/signin\")}\r\n                  >\r\n                    Get Started\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div className=\"left-section\">\r\n                    <h3>A blogging website for</h3>\r\n                    <h2>EVERYONE</h2>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      shape=\"round\"\r\n                      icon={<RightCircleOutlined />}\r\n                      size=\"large\"\r\n                      onClick={() => router.push(\"/signin\")}\r\n                    >\r\n                      Get Started\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"right-section\">\r\n                    <Player\r\n                      autoplay\r\n                      loop\r\n                      src=\"https://assets10.lottiefiles.com/packages/lf20_GtqlRg.json\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Jumbotron>\r\n        </>\r\n      )}\r\n      <Divider orientation=\"center\">Most recent posts</Divider>\r\n      <Row className=\"posts-container\" type=\"flex\">\r\n        {postsData.map((item) => (\r\n          <Col xs={24} sm={12} md={8} lg={8} key={item._id}>\r\n            <Card\r\n              hoverable\r\n              cover={\r\n                <img\r\n                  alt={item.title}\r\n                  src={item.imagePath ? item.imagePath : defaultPostImage}\r\n                />\r\n              }\r\n            >\r\n              <Meta\r\n                title={item.title}\r\n                description={item.content.substring(1, 100) + \"...\"}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Button, Tag, message } from \"antd\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport isEmpty from \"lodash.isempty\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userAuthActions } from \"./../../redux/actions/actionCreator\";\r\n\r\nexport default function LoginForm() {\r\n  const router = useHistory();\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState({});\r\n  const dispatch = useDispatch();\r\n  const userState = useSelector((st) => st.user);\r\n\r\n  const onSubmit = async (event) => {\r\n    try {\r\n      dispatch(userAuthActions.login({ user: event }));\r\n    } catch (error) {\r\n      console.log(\"Error logging in user...\", error.response ?? error);\r\n      if (error.response && error.response.data) {\r\n        setSubmissionErrors(error.response.data);\r\n      } else setSubmissionErrors({ err: \"Login error\" });\r\n    }\r\n  };\r\n\r\n  const checkValidation = (values) => {\r\n    const errors = {};\r\n    if (!values.email?.trim()) {\r\n      errors.email = \"Please enter the email\";\r\n    }\r\n    if (!values.password?.trim()) {\r\n      errors.password = \"Please enter the password\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userState.error) {\r\n      setSubmissionErrors([userState.error]);\r\n    }\r\n    if (userState.isLoggedIn) {\r\n      message.success(\"User logged in successfully\");\r\n      router.push(\"/\");\r\n    }\r\n  }, [userState]);\r\n\r\n  return (\r\n    <FinalForm\r\n      initialValues={initialValues}\r\n      validate={checkValidation}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, submitting }) => (\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n          <Form.Item\r\n            label=\"Email\"\r\n            labelCol={{ span: 24 }}\r\n            wrapperCol={{ span: 24 }}\r\n          >\r\n            <Field name=\"email\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input {...input} name=\"email\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" labelCol={{ span: 24 }}>\r\n            <Field name=\"password\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input.Password {...input} name=\"password\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n\r\n          {!isEmpty(submissionErrors) && (\r\n            <div>\r\n              {typeof submissionErrors === \"object\" ? (\r\n                Object.entries(submissionErrors).map(([key, value]) => (\r\n                  <Tag color=\"error\" className=\"full-width\" key={key}>\r\n                    {value}\r\n                  </Tag>\r\n                ))\r\n              ) : (\r\n                <Tag color=\"error\" className=\"full-width\">\r\n                  {submissionErrors}\r\n                </Tag>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"buttons-wrapper-vertical\">\r\n            <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\r\n              Login\r\n            </Button>\r\n            <Button\r\n              htmlType=\"button\"\r\n              type=\"link\"\r\n              onClick={() => router.push(\"signup\")}\r\n            >\r\n              Don't have an account? Signup!\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\nimport \"./Login.scss\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nexport default function Login() {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWidth(window.innerWidth);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [width]);\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      {width <= 650 ? (\r\n        <div className=\"center-panel\">\r\n          <LoginForm />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"left-panel\">\r\n            <LoginForm />\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            <h2>\r\n              #1 Bloggin website for everyone around the globe. Totally free and\r\n              easy to use.\r\n            </h2>\r\n            <Player\r\n              autoplay\r\n              loop\r\n              src=\"https://assets2.lottiefiles.com/packages/lf20_jcikwtux.json\"\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Button, Tag, message } from \"antd\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { authAPI } from \"./../../api/api\";\r\nimport isEmpty from \"lodash.isempty\";\r\n\r\nexport default function SignupForm() {\r\n  const router = useHistory();\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState({});\r\n\r\n  const onSubmit = async (event) => {\r\n    try {\r\n      await authAPI.signup({ user: event });\r\n      message.success(\"User created successfully\");\r\n      router.push(\"/login\");\r\n    } catch (error) {\r\n      console.log(\"Error registering a new user...\", error.response ?? error);\r\n      if (error.response && error.response.data) {\r\n        setSubmissionErrors(error.response.data);\r\n      } else setSubmissionErrors({ err: \"Signup error\" });\r\n    }\r\n  };\r\n\r\n  const checkValidation = (values) => {\r\n    const errors = {};\r\n    if (!values.userName?.trim()) {\r\n      errors.userName = \"Please enter the userName\";\r\n    }\r\n    if (!values.password?.trim()) {\r\n      errors.password = \"Please enter the password\";\r\n    }\r\n    if (!values.confirmPassword?.trim()) {\r\n      errors.confirmPassword = \"Please enter the password confirmation\";\r\n    } else if (values.confirmPassword !== values.password) {\r\n      errors.confirmPassword = \"Passwords do not match\";\r\n    }\r\n    if (!values.email?.trim()) {\r\n      errors.email = \"Please enter the email\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <FinalForm\r\n      initialValues={initialValues}\r\n      validate={checkValidation}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, submitting }) => (\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n          <Form.Item\r\n            label=\"UserName\"\r\n            labelCol={{ span: 24 }}\r\n            wrapperCol={{ span: 24 }}\r\n          >\r\n            <Field name=\"userName\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input {...input} name=\"userName\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" labelCol={{ span: 24 }}>\r\n            <Field name=\"password\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input.Password {...input} name=\"password\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n          <Form.Item label=\"Confirm Password\" labelCol={{ span: 24 }}>\r\n            <Field name=\"confirmPassword\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input.Password {...input} name=\"confirmPassword\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n          <Form.Item label=\"Email\" labelCol={{ span: 24 }}>\r\n            <Field name=\"email\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input {...input} name=\"email\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n          <Form.Item label=\"Summary\" labelCol={{ span: 24 }}>\r\n            <Field name=\"summary\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input {...input} name=\"summary\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n          <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\r\n            <Field name=\"imagePath\">\r\n              {({ input, meta }) => (\r\n                <div>\r\n                  <Input {...input} name=\"imagePath\" />\r\n                  {meta.touched && meta.error && (\r\n                    <Tag color=\"error\">{meta.error}</Tag>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form.Item>\r\n\r\n          {!isEmpty(submissionErrors) && (\r\n            <div>\r\n              {Object.entries(submissionErrors).map(([key, value]) => (\r\n                <Tag color=\"error\" className=\"full-width\" key={key}>\r\n                  {value}\r\n                </Tag>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"buttons-wrapper-vertical\">\r\n            <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\r\n              Signup\r\n            </Button>\r\n            <Button\r\n              htmlType=\"button\"\r\n              type=\"link\"\r\n              onClick={() => router.push(\"login\")}\r\n            >\r\n              Already have an account? Login!\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\nimport SignupForm from \"./SignupForm\";\r\n\r\nexport default function Signup() {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWidth(window.innerWidth);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [width]);\r\n\r\n  return (\r\n    <div className=\"signup\">\r\n      {width <= 650 ? (\r\n        <div className=\"center-panel\">\r\n          <h2 className=\"centered-text\">Sign up for free</h2>\r\n          <SignupForm />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"center-panel-small\">\r\n            <h2 className=\"centered-text\">Sign up for free</h2>\r\n            <SignupForm />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Button, Tag, message } from \"antd\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport isEmpty from \"lodash.isempty\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { postsAPI } from \"./../../api/api\";\r\n\r\nexport default function NewPost() {\r\n  const router = useHistory();\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState({});\r\n  const userState = useSelector((st) => st.user);\r\n\r\n  const onSubmit = async (event) => {\r\n    try {\r\n      await postsAPI.add({\r\n        post: { ...event, createdBy: userState.user.id },\r\n      });\r\n      message.success(\"Post created successfully\");\r\n      router.push(\"/\");\r\n    } catch (error) {\r\n      console.log(\"Error creating a new post...\", error.response ?? error);\r\n      if (error.response && error.response.data) {\r\n        setSubmissionErrors(error.response.data);\r\n      } else setSubmissionErrors({ err: \"Post error\" });\r\n    }\r\n  };\r\n\r\n  const checkValidation = (values) => {\r\n    const errors = {};\r\n    if (!values.title?.trim()) {\r\n      errors.title = \"Please enter the post's title\";\r\n    }\r\n    if (!values.content?.trim()) {\r\n      errors.content = \"Please enter the post's content\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h3>Create a new post</h3>\r\n      <FinalForm\r\n        initialValues={initialValues}\r\n        validate={checkValidation}\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit, submitting }) => (\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <Form.Item\r\n              label=\"Title\"\r\n              labelCol={{ span: 24 }}\r\n              wrapperCol={{ span: 24 }}\r\n            >\r\n              <Field name=\"title\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <Input {...input} name=\"title\" />\r\n                    {meta.touched && meta.error && (\r\n                      <Tag color=\"error\">{meta.error}</Tag>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Content\" labelCol={{ span: 24 }}>\r\n              <Field name=\"content\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <TextArea rows={4} {...input} name=\"content\" />\r\n                    {meta.touched && meta.error && (\r\n                      <Tag color=\"error\">{meta.error}</Tag>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\r\n              <Field name=\"imagePath\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <Input {...input} name=\"imagePath\" />\r\n                    {meta.touched && meta.error && (\r\n                      <Tag color=\"error\">{meta.error}</Tag>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form.Item>\r\n\r\n            {!isEmpty(submissionErrors) && (\r\n              <div>\r\n                {Object.entries(submissionErrors).map(([key, value]) => (\r\n                  <Tag color=\"error\" className=\"full-width\" key={key}>\r\n                    {value}\r\n                  </Tag>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"buttons-wrapper-horizontal\">\r\n              <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\r\n                Create Post\r\n              </Button>\r\n              <Button htmlType=\"button\" onClick={() => router.goBack()}>\r\n                Back\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Card, Modal, message } from \"antd\";\r\nimport defaultPostImage from \"./../../assets/images/default-post-image.jpg\";\r\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"./PostsGrid.scss\";\r\nimport { postsAPI } from \"./../../api/api\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function PostsGrid({ data, reloadPosts }) {\r\n  const router = useHistory();\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [deletePostID, setDeletePostID] = useState(null);\r\n  const [reload, setReload] = useState(false);\r\n  const userState = useSelector((st) => st.user);\r\n\r\n  const confirmDelete = async () => {\r\n    try {\r\n      await postsAPI.delete(deletePostID);\r\n      setReload(!reload);\r\n      reloadPosts(!reload);\r\n      setDeleteModal(false);\r\n      message.success(\"Post deleted successfully\");\r\n    } catch (error) {\r\n      console.log(\"Error deleting post...\", error.response ?? error);\r\n      message.error(\"Error deleting post\");\r\n      if (error.response && error.response.data) {\r\n        message.error(error.response.data);\r\n      } else message.error(\"Error deleting post\");\r\n      setDeleteModal(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"posts-container\" type=\"flex\">\r\n        {data.map((item) => (\r\n          <Col xs={24} sm={12} md={8} lg={8} key={item._id}>\r\n            <Card\r\n              hoverable\r\n              cover={\r\n                <div className=\"image-container\">\r\n                  <img\r\n                    alt={item.title}\r\n                    src={item.imagePath ? item.imagePath : defaultPostImage}\r\n                    className=\"card-image\"\r\n                  />\r\n                </div>\r\n              }\r\n              actions={\r\n                item.createdBy === userState.user.id\r\n                  ? [\r\n                      <EditTwoTone\r\n                        key=\"edit\"\r\n                        onClick={() =>\r\n                          router.push(\"/posts/edit\", { postID: item._id })\r\n                        }\r\n                      />,\r\n                      <DeleteTwoTone\r\n                        key=\"delete\"\r\n                        twoToneColor=\"red\"\r\n                        onClick={() => {\r\n                          setDeletePostID(item._id);\r\n                          setDeleteModal(true);\r\n                        }}\r\n                      />,\r\n                    ]\r\n                  : []\r\n              }\r\n              onClick={() => router.push(\"/posts/view\", { postID: item._id })}\r\n            >\r\n              <Meta\r\n                title={item.title}\r\n                description={item.content.substring(0, 100) + \"...\"}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n\r\n      <Modal\r\n        title=\"Delete Confirmation\"\r\n        visible={deleteModal}\r\n        onOk={() => confirmDelete()}\r\n        onCancel={() => setDeleteModal(false)}\r\n        centered\r\n      >\r\n        <p>Are you sure you want to delete post?</p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { postsAPI } from \"./../../api/api\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport PostsGrid from \"../../components/PostsGrid/PostsGrid\";\r\n\r\nexport default function UserPosts() {\r\n  const userState = useSelector((st) => st.user);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [postsData, setPostsData] = useState([]);\r\n  const location = useLocation();\r\n  const [userName, setUserName] = useState(null);\r\n  const [userID, setUserID] = useState(null);\r\n  const [reload, setReload] = useState(false);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWidth(window.innerWidth);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [width]);\r\n\r\n  const getPostsData = async () => {\r\n    try {\r\n      const { data: res } = await postsAPI.getPostByUserId(\r\n        userID ?? userState.user.id\r\n      );\r\n      console.log(res);\r\n      setPostsData(res);\r\n    } catch (error) {\r\n      console.log(\"Error retrieving all posts...\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (\r\n        location.state &&\r\n        location.state.hasOwnProperty(\"userID\") &&\r\n        location.state.hasOwnProperty(\"userName\")\r\n      ) {\r\n        setUserName(location.state.userName);\r\n        setUserID(location.state.userID);\r\n      }\r\n\r\n      getPostsData();\r\n    })();\r\n  }, [location.state]);\r\n\r\n  useEffect(() => {\r\n    getPostsData();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div className=\"posts-div\">\r\n      <h2>{userName ? `Posts of user ${userName}` : \"Your posts\"}</h2>\r\n      {Boolean(postsData) && Boolean(postsData.length) ? (\r\n        <PostsGrid\r\n          data={postsData}\r\n          reloadPosts={(reloadTrigger) => setReload(reloadTrigger)}\r\n        />\r\n      ) : (\r\n        <h2>You have no posts yet</h2>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Form, Input, Button, Tag, message } from \"antd\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport isEmpty from \"lodash.isempty\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { postsAPI } from \"./../../api/api\";\r\n\r\nexport default function EditPost() {\r\n  const router = useHistory();\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState({});\r\n  const userState = useSelector((st) => st.user);\r\n  const location = useLocation();\r\n  const [postID, setPostID] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let id = null;\r\n    (async () => {\r\n      if (location.state && location.state.hasOwnProperty(\"postID\")) {\r\n        id = location.state.postID;\r\n        setPostID(id);\r\n        try {\r\n          const { data: res } = await postsAPI.getOne(id);\r\n          console.log(res);\r\n          setInitialValues(res);\r\n        } catch (error) {\r\n          console.log(\"Error retrieving one post...\", error);\r\n        }\r\n      } else {\r\n        message.error(\"Post ID was not provided\");\r\n        router.goBack();\r\n      }\r\n    })();\r\n  }, [location.state]);\r\n\r\n  const onSubmit = async (event) => {\r\n    try {\r\n      await postsAPI.update({\r\n        post: event,\r\n      });\r\n      message.success(\"Post updated successfully\");\r\n      router.goBack();\r\n    } catch (error) {\r\n      console.log(\"Error updating post...\", error.response ?? error);\r\n      if (error.response && error.response.data) {\r\n        setSubmissionErrors(error.response.data);\r\n      } else setSubmissionErrors({ err: \"Update error\" });\r\n    }\r\n  };\r\n\r\n  const checkValidation = (values) => {\r\n    const errors = {};\r\n    if (!values.title?.trim()) {\r\n      errors.title = \"Please enter the post's title\";\r\n    }\r\n    if (!values.content?.trim()) {\r\n      errors.content = \"Please enter the post's content\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h3>Edit post</h3>\r\n      <FinalForm\r\n        initialValues={initialValues}\r\n        validate={checkValidation}\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit, submitting }) => (\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <Form.Item\r\n              label=\"Title\"\r\n              labelCol={{ span: 24 }}\r\n              wrapperCol={{ span: 24 }}\r\n            >\r\n              <Field name=\"title\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <Input {...input} name=\"title\" />\r\n                    {meta.touched && meta.error && (\r\n                      <Tag color=\"error\">{meta.error}</Tag>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Content\" labelCol={{ span: 24 }}>\r\n              <Field name=\"content\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <TextArea rows={4} {...input} name=\"content\" />\r\n                    {meta.touched && meta.error && (\r\n                      <Tag color=\"error\">{meta.error}</Tag>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\r\n              <Field name=\"imagePath\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <Input {...input} name=\"imagePath\" />\r\n                    {meta.touched && meta.error && (\r\n                      <Tag color=\"error\">{meta.error}</Tag>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form.Item>\r\n\r\n            {!isEmpty(submissionErrors) && (\r\n              <div>\r\n                {Object.entries(submissionErrors).map(([key, value]) => (\r\n                  <Tag color=\"error\" className=\"full-width\" key={key}>\r\n                    {value}\r\n                  </Tag>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"buttons-wrapper-horizontal\">\r\n              <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\r\n                Update Post\r\n              </Button>\r\n              <Button htmlType=\"button\" onClick={() => router.goBack()}>\r\n                Back\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default-user.c3f94521.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Button, Tag, message, Image } from \"antd\";\r\nimport {\r\n  EditFilled,\r\n  LockFilled,\r\n  SaveFilled,\r\n  CaretLeftOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport isEmpty from \"lodash.isempty\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { usersAPI } from \"./../../api/api\";\r\nimport defaultUser from \"./../../assets/images/default-user.png\";\r\nimport \"./UserProfile.scss\";\r\nimport { userAuthActions } from \"./../../redux/actions/actionCreator\";\r\n\r\nexport default function UserProfile() {\r\n  const router = useHistory();\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [submissionErrors, setSubmissionErrors] = useState({});\r\n  const userState = useSelector((st) => st.user);\r\n  const [editing, setEditing] = useState(false);\r\n  const [editingPassword, setEditingPassword] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (userState && userState.user && userState.user.id) {\r\n        try {\r\n          const { data: res } = await usersAPI.getOne(userState.user.id);\r\n          setInitialValues(res);\r\n        } catch (error) {\r\n          console.log(\"Error retrieving user data...\", error);\r\n        }\r\n      } else {\r\n        message.error(\"An error occured while retrieving user ID\");\r\n        router.push(\"/\");\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const checkValidation = (values) => {\r\n    const errors = {};\r\n    if (editing && !values.userName?.trim()) {\r\n      errors.userName = \"Please enter the userName\";\r\n    }\r\n    if (editingPassword && !values.oldPassword?.trim()) {\r\n      errors.password = \"Please enter the old password\";\r\n    }\r\n    if (editingPassword && !values.password?.trim()) {\r\n      errors.password = \"Please enter the password\";\r\n    }\r\n    if (editingPassword && !values.confirmPassword?.trim()) {\r\n      errors.confirmPassword = \"Please enter the password confirmation\";\r\n    } else if (editingPassword && values.confirmPassword !== values.password) {\r\n      errors.confirmPassword = \"Passwords do not match\";\r\n    }\r\n    if (editing && !values.email?.trim()) {\r\n      errors.email = \"Please enter the email\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    setSubmissionErrors([]);\r\n    try {\r\n      await usersAPI.update({ user: event });\r\n      dispatch(userAuthActions.updateUser(event));\r\n      message.success(\"User profile updated successfully\");\r\n      setEditing(false);\r\n      setEditingPassword(false);\r\n      setInitialValues(event);\r\n    } catch (error) {\r\n      console.log(\"Error updating user profile..\", error.response ?? error);\r\n      if (error.response && error.response.data) {\r\n        setSubmissionErrors(error.response.data);\r\n      } else setSubmissionErrors({ err: \"Profile update error\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"user-profile\">\r\n        <h2 className=\"centered-text \">{initialValues.userName}'s Profile</h2>\r\n        <div className=\"user-image centered-text \">\r\n          <Image\r\n            className=\"image\"\r\n            src={initialValues.imagePath ?? defaultUser}\r\n          />\r\n        </div>\r\n        <div className=\"user-info\">\r\n          <FinalForm\r\n            initialValues={initialValues}\r\n            validate={checkValidation}\r\n            onSubmit={onSubmit}\r\n            render={({ handleSubmit, submitting, form }) => (\r\n              <form className=\"form\" onSubmit={handleSubmit}>\r\n                <Form.Item\r\n                  label=\"UserName\"\r\n                  labelCol={{ span: 24 }}\r\n                  wrapperCol={{ span: 24 }}\r\n                >\r\n                  <Field name=\"userName\">\r\n                    {({ input, meta }) => (\r\n                      <div>\r\n                        <Input\r\n                          {...input}\r\n                          name=\"userName\"\r\n                          readOnly={!editing}\r\n                          className={!editing && \"disabled\"}\r\n                        />\r\n                        {meta.touched && meta.error && (\r\n                          <Tag color=\"error\">{meta.error}</Tag>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </Field>\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Email\" labelCol={{ span: 24 }}>\r\n                  <Field name=\"email\">\r\n                    {({ input, meta }) => (\r\n                      <div>\r\n                        <Input\r\n                          {...input}\r\n                          name=\"email\"\r\n                          readOnly={!editing}\r\n                          className={!editing && \"disabled\"}\r\n                        />\r\n                        {meta.touched && meta.error && (\r\n                          <Tag color=\"error\">{meta.error}</Tag>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </Field>\r\n                </Form.Item>\r\n                <Form.Item label=\"Summary\" labelCol={{ span: 24 }}>\r\n                  <Field name=\"summary\">\r\n                    {({ input, meta }) => (\r\n                      <div>\r\n                        <Input\r\n                          {...input}\r\n                          value={\r\n                            !initialValues.summary && !editing\r\n                              ? \"No content\"\r\n                              : initialValues.summary\r\n                          }\r\n                          name=\"summary\"\r\n                          readOnly={!editing}\r\n                          className={!editing && \"disabled\"}\r\n                        />\r\n                        {meta.touched && meta.error && (\r\n                          <Tag color=\"error\">{meta.error}</Tag>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </Field>\r\n                </Form.Item>\r\n                {editing && (\r\n                  <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\r\n                    <Field name=\"imagePath\">\r\n                      {({ input, meta }) => (\r\n                        <div>\r\n                          <Input {...input} name=\"imagePath\" />\r\n                          {meta.touched && meta.error && (\r\n                            <Tag color=\"error\">{meta.error}</Tag>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </Field>\r\n                  </Form.Item>\r\n                )}\r\n\r\n                {editingPassword && (\r\n                  <>\r\n                    <Form.Item label=\"Old Password\" labelCol={{ span: 24 }}>\r\n                      <Field name=\"oldPassword\">\r\n                        {({ input, meta }) => (\r\n                          <div>\r\n                            <Input.Password\r\n                              {...input}\r\n                              name=\"oldPassword\"\r\n                              className=\"no-radius\"\r\n                            />\r\n                            {meta.touched && meta.error && (\r\n                              <Tag color=\"error\">{meta.error}</Tag>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </Field>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Password\" labelCol={{ span: 24 }}>\r\n                      <Field name=\"password\">\r\n                        {({ input, meta }) => (\r\n                          <div>\r\n                            <Input.Password {...input} name=\"password\" />\r\n                            {meta.touched && meta.error && (\r\n                              <Tag color=\"error\">{meta.error}</Tag>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </Field>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Confirm Password\" labelCol={{ span: 24 }}>\r\n                      <Field name=\"confirmPassword\">\r\n                        {({ input, meta }) => (\r\n                          <div>\r\n                            <Input.Password {...input} name=\"confirmPassword\" />\r\n                            {meta.touched && meta.error && (\r\n                              <Tag color=\"error\">{meta.error}</Tag>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </Field>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n\r\n                {!isEmpty(submissionErrors) && (\r\n                  <div>\r\n                    {Object.entries(submissionErrors).map(([key, value]) => (\r\n                      <Tag color=\"error\" className=\"full-width\" key={key}>\r\n                        {value}\r\n                      </Tag>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"buttons-wrapper-horizontal m-auto\">\r\n                  {!(editing || editingPassword) && (\r\n                    <>\r\n                      <Button\r\n                        htmlType=\"button\"\r\n                        type=\"primary\"\r\n                        icon={<EditFilled />}\r\n                        onClick={() => {\r\n                          setEditing(true);\r\n                          setEditingPassword(false);\r\n                        }}\r\n                      >\r\n                        Edit Profile\r\n                      </Button>\r\n                      <Button\r\n                        htmlType=\"button\"\r\n                        type=\"primary\"\r\n                        icon={<LockFilled />}\r\n                        onClick={() => {\r\n                          setEditing(false);\r\n                          setEditingPassword(true);\r\n                        }}\r\n                      >\r\n                        Edit Password\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n\r\n                  {(editing || editingPassword) && (\r\n                    <>\r\n                      <Button\r\n                        disabled={submitting}\r\n                        htmlType=\"submit\"\r\n                        type=\"primary\"\r\n                        icon={<SaveFilled />}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Button\r\n                        htmlType=\"button\"\r\n                        type=\"primary\"\r\n                        icon={<CaretLeftOutlined />}\r\n                        onClick={() => {\r\n                          setEditing(false);\r\n                          setEditingPassword(false);\r\n                          form.reset();\r\n                        }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Button, message, Image } from \"antd\";\r\nimport { EditFilled, DeleteFilled } from \"@ant-design/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { postsAPI } from \"./../../api/api\";\r\nimport \"./Post.scss\";\r\nimport defaultPostImage from \"./../../assets/images/default-post-image.jpg\";\r\nimport defaultUser from \"./../../assets/images/default-user.png\";\r\nimport moment from \"moment\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\n\r\nexport default function Post() {\r\n  const [postData, setPostData] = useState({});\r\n  const router = useHistory();\r\n  const userState = useSelector((st) => st.user);\r\n  const location = useLocation();\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [deletePostID, setDeletePostID] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let id = null;\r\n    (async () => {\r\n      if (location.state && location.state.hasOwnProperty(\"postID\")) {\r\n        id = location.state.postID;\r\n        try {\r\n          const { data: res } = await postsAPI.getOne(id);\r\n          console.log(res);\r\n          setPostData(res);\r\n        } catch (error) {\r\n          console.log(\"Error retrieving one post...\", error);\r\n        }\r\n      } else {\r\n        message.error(\"An error occured while retrieving post ID\");\r\n        router.push(\"/\");\r\n      }\r\n    })();\r\n  }, [location.state]);\r\n\r\n  return (\r\n    <div className=\"view-post\">\r\n      <div className=\"post-header\">\r\n        <h1>{postData.title}</h1>\r\n        <div className=\"two-cols\">\r\n          <div>\r\n            <Avatar size=\"large\" src={postData.userImageUrl ?? defaultUser} />\r\n            &nbsp;\r\n            {postData.createdByName}\r\n          </div>\r\n          <p>{moment(postData.createdAt).format(\"DD MMMM YYYY\")}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"centered-text\">\r\n        <Image\r\n          src={postData.imagePath ? postData.imagePath : defaultPostImage}\r\n        />\r\n      </div>\r\n      <div className=\"post-content\">{postData.content}</div>\r\n      {postData.createdBy === userState.user.id && (\r\n        <div className=\"buttons-wrapper-horizontal\">\r\n          <Button\r\n            htmlType=\"button\"\r\n            type=\"primary\"\r\n            icon={<EditFilled />}\r\n            onClick={() => router.push(\"/posts/edit\", { postID: postData._id })}\r\n          >\r\n            Edit Profile\r\n          </Button>\r\n\r\n          <Button\r\n            htmlType=\"button\"\r\n            type=\"primary\"\r\n            icon={<DeleteFilled />}\r\n            danger\r\n            onClick={() => {\r\n              setDeletePostID(postData._id);\r\n              setDeleteModal(true);\r\n            }}\r\n          >\r\n            Edit Profile\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst LoggedInRoute = ({ component: Component, ...rest }) => {\r\n  const userState = useSelector((st) => st.user);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        userState.isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoggedInRoute;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst NotLoggedInRoute = ({ component: Component, ...rest }) => {\r\n  const userState = useSelector((st) => st.user);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !userState.isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default NotLoggedInRoute;\r\n","import React from \"react\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"my-2-auto\">\r\n      <h1 className=\"centered-text\">Page not found</h1>\r\n      <Player\r\n        autoplay\r\n        loop\r\n        style={{ height: \"500px\" }}\r\n        src=\"https://assets1.lottiefiles.com/packages/lf20_zxliqmhr.json\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Login from \"./pages/Login/Login\";\r\nimport Signup from \"./pages/Signup/Signup\";\r\nimport NewPost from \"./pages/Posts/NewPost\";\r\nimport UserPosts from \"./pages/Posts/UserPosts\";\r\nimport EditPost from \"./pages/Posts/EditPost\";\r\nimport UserProfile from \"./pages/Users/UserProfile\";\r\nimport Post from \"./pages/Posts/Post\";\r\nimport LoggedInRoute from \"./LoggedInRoute\";\r\nimport NotLoggedInRoute from \"./NotLoggedInRoute\";\r\nimport NotFound from \"./pages/NotFound/NotFound\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n        <NotLoggedInRoute exact path=\"/login\" component={Login} />\r\n        <NotLoggedInRoute exact path=\"/signup\" component={Signup} />\r\n        <Route exact path=\"/user/posts\" component={UserPosts} />\r\n        <Route exact path=\"/user/profile\" component={UserProfile} />\r\n        <Route exact path=\"/posts/view\" component={Post} />\r\n        <LoggedInRoute exact path=\"/posts/new\" component={NewPost} />\r\n        <LoggedInRoute exact path=\"/posts/edit\" component={EditPost} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { userAuth as actions } from \"./../actions/index\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { saveState, loadState } from \"./../store/sessionStorage\";\r\n\r\nlet initialState;\r\nconst emptyState = {\r\n  isLoggedIn: false,\r\n  error: \"\",\r\n  token: null,\r\n  user: {\r\n    id: \"\",\r\n    userName: \"\",\r\n    imagePath: \"\",\r\n  },\r\n};\r\nif (loadState() && loadState().token) {\r\n  const decodedToken = jwt.decode(loadState().token);\r\n  initialState = {\r\n    ...loadState(),\r\n    user: {\r\n      id: decodedToken.id,\r\n      userName: decodedToken.userName,\r\n      imagePath: decodedToken.imagePath,\r\n    },\r\n  };\r\n} else {\r\n  initialState = { ...emptyState };\r\n}\r\n\r\nexport const userAuthReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.LOGIN_SUCCESS:\r\n      let newState;\r\n      if (loadState() && loadState().token) {\r\n        const decodedToken = jwt.decode(loadState().token);\r\n        newState = {\r\n          ...loadState(),\r\n          user: {\r\n            id: decodedToken.id,\r\n            userName: decodedToken.userName,\r\n            imagePath: decodedToken.imagePath,\r\n          },\r\n        };\r\n      }\r\n      return newState;\r\n\r\n    case actions.UPDATE_USER:\r\n      let updatedState = {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          imagePath: action.payload.imagePath,\r\n          userName: action.payload.userName,\r\n        },\r\n      };\r\n      saveState(updatedState);\r\n      return updatedState;\r\n\r\n    case actions.LOGOUT:\r\n      saveState(emptyState);\r\n      return emptyState;\r\n\r\n    case actions.LOGIN_FAILED:\r\n      if (action.payload) {\r\n        let newState = {\r\n          token: null,\r\n          isLoggedIn: false,\r\n          error: action.payload,\r\n        };\r\n        saveState(newState);\r\n        return newState;\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = sessionStorage.getItem(\"user\");\r\n\r\n    if (serializedState === null) {\r\n      return {\r\n        isLoggedIn: false,\r\n        errors: \"\",\r\n        token: null,\r\n      };\r\n    }\r\n\r\n    return JSON.parse(serializedState);\r\n  } catch (error) {\r\n    console.log(\"Load state error...\", error.response ?? error);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    sessionStorage.clear();\r\n    const serializedState = JSON.stringify(state);\r\n    sessionStorage.setItem(\"user\", serializedState);\r\n  } catch (error) {\r\n    console.log(\"Save state error...\", error.response ?? error);\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { userAuthReducer } from \"./userAuthReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userAuthReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { put, takeEvery } from \"redux-saga/effects\";\r\nimport { userAuth as actions } from \"../actions\";\r\nimport { userAuthActions } from \"./../actions/actionCreator\";\r\nimport { authAPI } from \"./../../api/api\";\r\nimport { saveState } from \"./../store/sessionStorage\";\r\n\r\nfunction* createLogin(action) {\r\n  try {\r\n    const response = yield authAPI.login(action.payload);\r\n    if (response.data.token) {\r\n      const token = response.data.token;\r\n      saveState({\r\n        isLoggedIn: true,\r\n        error: \"\",\r\n        token: token,\r\n      });\r\n      yield put(\r\n        userAuthActions.loginSuccess({\r\n          token,\r\n        })\r\n      );\r\n    }\r\n  } catch (err) {\r\n    yield put(userAuthActions.loginFailed(\"Login data is incorrect\"));\r\n  }\r\n}\r\n\r\nexport function* createLoginStart() {\r\n  yield takeEvery(actions.LOGIN, createLogin);\r\n}\r\n","import { all, call } from \"redux-saga/effects\";\r\nimport { createLoginStart } from \"./userAuthSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(createLoginStart)]);\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\nimport rootSaga from \"../sagas/rootSaga\";\r\n\r\n// const persistedState = loadState();\r\n\r\nconst onSagaUncaughtErrors = (err, errInfo) => {\r\n  console.log({ onSagaError: \"saga error\", err, errInfo });\r\n};\r\n\r\nconst sagaMiddleware = createSagaMiddleware({ onError: onSagaUncaughtErrors });\r\nconst loggerMiddleware = createLogger();\r\n\r\nconst middleWares = [loggerMiddleware, sagaMiddleware];\r\n\r\nlet reduxStore;\r\n\r\nconst storeConfig = () => {\r\n  const store = createStore(rootReducer, applyMiddleware(...middleWares));\r\n\r\n  // start redux sagas\r\n  sagaMiddleware.run(rootSaga);\r\n  reduxStore = store;\r\n\r\n  return store;\r\n};\r\n\r\nexport { reduxStore };\r\nexport default storeConfig;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/styles/index.scss\";\r\nimport App from \"./App\";\r\nimport \"antd/dist/antd.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport storeConfig from \"./redux/store/store\";\r\n\r\nconst store = storeConfig();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}